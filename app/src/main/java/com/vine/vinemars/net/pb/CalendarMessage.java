// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CalendarMessage.proto

package com.vine.vinemars.net.pb;

public final class CalendarMessage {
  private CalendarMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface FindCalendarListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional string startTime = 1;
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    java.lang.String getStartTime();
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    com.google.protobuf.ByteString
        getStartTimeBytes();

    // optional string endTime = 2;
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    java.lang.String getEndTime();
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    com.google.protobuf.ByteString
        getEndTimeBytes();

    // optional int64 calCategoryId = 3;
    /**
     * <code>optional int64 calCategoryId = 3;</code>
     *
     * <pre>
     *日程分类Id
     * </pre>
     */
    boolean hasCalCategoryId();
    /**
     * <code>optional int64 calCategoryId = 3;</code>
     *
     * <pre>
     *日程分类Id
     * </pre>
     */
    long getCalCategoryId();

    // optional int32 priority = 4;
    /**
     * <code>optional int32 priority = 4;</code>
     *
     * <pre>
     *优先级
     * </pre>
     */
    boolean hasPriority();
    /**
     * <code>optional int32 priority = 4;</code>
     *
     * <pre>
     *优先级
     * </pre>
     */
    int getPriority();

    // optional string keyword = 5;
    /**
     * <code>optional string keyword = 5;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    boolean hasKeyword();
    /**
     * <code>optional string keyword = 5;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    java.lang.String getKeyword();
    /**
     * <code>optional string keyword = 5;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeywordBytes();
  }
  /**
   * Protobuf type {@code FindCalendarList}
   *
   * <pre>
   *客户端日程列表请求消息包
   * </pre>
   */
  public static final class FindCalendarList extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarListOrBuilder {
    // Use FindCalendarList.newBuilder() to construct.
    private FindCalendarList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarList(boolean noInit) {}

    private static final FindCalendarList defaultInstance;
    public static FindCalendarList getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              startTime_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              endTime_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              calCategoryId_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              priority_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              keyword_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarList> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarList>() {
      public FindCalendarList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarList> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string startTime = 1;
    public static final int STARTTIME_FIELD_NUMBER = 1;
    private java.lang.Object startTime_;
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public java.lang.String getStartTime() {
      java.lang.Object ref = startTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          startTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStartTimeBytes() {
      java.lang.Object ref = startTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        startTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string endTime = 2;
    public static final int ENDTIME_FIELD_NUMBER = 2;
    private java.lang.Object endTime_;
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public java.lang.String getEndTime() {
      java.lang.Object ref = endTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          endTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEndTimeBytes() {
      java.lang.Object ref = endTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        endTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 calCategoryId = 3;
    public static final int CALCATEGORYID_FIELD_NUMBER = 3;
    private long calCategoryId_;
    /**
     * <code>optional int64 calCategoryId = 3;</code>
     *
     * <pre>
     *日程分类Id
     * </pre>
     */
    public boolean hasCalCategoryId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 calCategoryId = 3;</code>
     *
     * <pre>
     *日程分类Id
     * </pre>
     */
    public long getCalCategoryId() {
      return calCategoryId_;
    }

    // optional int32 priority = 4;
    public static final int PRIORITY_FIELD_NUMBER = 4;
    private int priority_;
    /**
     * <code>optional int32 priority = 4;</code>
     *
     * <pre>
     *优先级
     * </pre>
     */
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 priority = 4;</code>
     *
     * <pre>
     *优先级
     * </pre>
     */
    public int getPriority() {
      return priority_;
    }

    // optional string keyword = 5;
    public static final int KEYWORD_FIELD_NUMBER = 5;
    private java.lang.Object keyword_;
    /**
     * <code>optional string keyword = 5;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    public boolean hasKeyword() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string keyword = 5;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    public java.lang.String getKeyword() {
      java.lang.Object ref = keyword_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          keyword_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string keyword = 5;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeywordBytes() {
      java.lang.Object ref = keyword_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      startTime_ = "";
      endTime_ = "";
      calCategoryId_ = 0L;
      priority_ = 0;
      keyword_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEndTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, calCategoryId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, priority_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getKeywordBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEndTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, calCategoryId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, priority_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getKeywordBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarList}
     *
     * <pre>
     *客户端日程列表请求消息包
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        endTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        calCategoryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        priority_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        keyword_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.calCategoryId_ = calCategoryId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.priority_ = priority_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.keyword_ = keyword_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList.getDefaultInstance()) return this;
        if (other.hasStartTime()) {
          bitField0_ |= 0x00000001;
          startTime_ = other.startTime_;
          
        }
        if (other.hasEndTime()) {
          bitField0_ |= 0x00000002;
          endTime_ = other.endTime_;
          
        }
        if (other.hasCalCategoryId()) {
          setCalCategoryId(other.getCalCategoryId());
        }
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        if (other.hasKeyword()) {
          bitField0_ |= 0x00000010;
          keyword_ = other.keyword_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string startTime = 1;
      private java.lang.Object startTime_ = "";
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public java.lang.String getStartTime() {
        java.lang.Object ref = startTime_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          startTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStartTimeBytes() {
        java.lang.Object ref = startTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          startTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder setStartTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        startTime_ = value;
        
        return this;
      }
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = getDefaultInstance().getStartTime();
        
        return this;
      }
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder setStartTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        startTime_ = value;
        
        return this;
      }

      // optional string endTime = 2;
      private java.lang.Object endTime_ = "";
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public java.lang.String getEndTime() {
        java.lang.Object ref = endTime_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          endTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEndTimeBytes() {
        java.lang.Object ref = endTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          endTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder setEndTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        endTime_ = value;
        
        return this;
      }
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = getDefaultInstance().getEndTime();
        
        return this;
      }
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder setEndTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        endTime_ = value;
        
        return this;
      }

      // optional int64 calCategoryId = 3;
      private long calCategoryId_ ;
      /**
       * <code>optional int64 calCategoryId = 3;</code>
       *
       * <pre>
       *日程分类Id
       * </pre>
       */
      public boolean hasCalCategoryId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 calCategoryId = 3;</code>
       *
       * <pre>
       *日程分类Id
       * </pre>
       */
      public long getCalCategoryId() {
        return calCategoryId_;
      }
      /**
       * <code>optional int64 calCategoryId = 3;</code>
       *
       * <pre>
       *日程分类Id
       * </pre>
       */
      public Builder setCalCategoryId(long value) {
        bitField0_ |= 0x00000004;
        calCategoryId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calCategoryId = 3;</code>
       *
       * <pre>
       *日程分类Id
       * </pre>
       */
      public Builder clearCalCategoryId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        calCategoryId_ = 0L;
        
        return this;
      }

      // optional int32 priority = 4;
      private int priority_ ;
      /**
       * <code>optional int32 priority = 4;</code>
       *
       * <pre>
       *优先级
       * </pre>
       */
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 priority = 4;</code>
       *
       * <pre>
       *优先级
       * </pre>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <code>optional int32 priority = 4;</code>
       *
       * <pre>
       *优先级
       * </pre>
       */
      public Builder setPriority(int value) {
        bitField0_ |= 0x00000008;
        priority_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 priority = 4;</code>
       *
       * <pre>
       *优先级
       * </pre>
       */
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000008);
        priority_ = 0;
        
        return this;
      }

      // optional string keyword = 5;
      private java.lang.Object keyword_ = "";
      /**
       * <code>optional string keyword = 5;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public boolean hasKeyword() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string keyword = 5;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public java.lang.String getKeyword() {
        java.lang.Object ref = keyword_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          keyword_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string keyword = 5;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeywordBytes() {
        java.lang.Object ref = keyword_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyword_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string keyword = 5;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public Builder setKeyword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        keyword_ = value;
        
        return this;
      }
      /**
       * <code>optional string keyword = 5;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public Builder clearKeyword() {
        bitField0_ = (bitField0_ & ~0x00000010);
        keyword_ = getDefaultInstance().getKeyword();
        
        return this;
      }
      /**
       * <code>optional string keyword = 5;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public Builder setKeywordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        keyword_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarList)
    }

    static {
      defaultInstance = new FindCalendarList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarList)
  }

  public interface CalendarCommentOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int64 id = 1;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    long getId();

    // optional string userId = 2;
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // optional int64 calendarId = 3;
    /**
     * <code>optional int64 calendarId = 3;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    boolean hasCalendarId();
    /**
     * <code>optional int64 calendarId = 3;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    long getCalendarId();

    // optional string calCommentDesc = 4;
    /**
     * <code>optional string calCommentDesc = 4;</code>
     *
     * <pre>
     *日程评论内容
     * </pre>
     */
    boolean hasCalCommentDesc();
    /**
     * <code>optional string calCommentDesc = 4;</code>
     *
     * <pre>
     *日程评论内容
     * </pre>
     */
    java.lang.String getCalCommentDesc();
    /**
     * <code>optional string calCommentDesc = 4;</code>
     *
     * <pre>
     *日程评论内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getCalCommentDescBytes();

    // optional string calCommentPic = 5;
    /**
     * <code>optional string calCommentPic = 5;</code>
     *
     * <pre>
     *日程评论图片
     * </pre>
     */
    boolean hasCalCommentPic();
    /**
     * <code>optional string calCommentPic = 5;</code>
     *
     * <pre>
     *日程评论图片
     * </pre>
     */
    java.lang.String getCalCommentPic();
    /**
     * <code>optional string calCommentPic = 5;</code>
     *
     * <pre>
     *日程评论图片
     * </pre>
     */
    com.google.protobuf.ByteString
        getCalCommentPicBytes();

    // optional string calCommentVoice = 6;
    /**
     * <code>optional string calCommentVoice = 6;</code>
     *
     * <pre>
     *日程评论音频
     * </pre>
     */
    boolean hasCalCommentVoice();
    /**
     * <code>optional string calCommentVoice = 6;</code>
     *
     * <pre>
     *日程评论音频
     * </pre>
     */
    java.lang.String getCalCommentVoice();
    /**
     * <code>optional string calCommentVoice = 6;</code>
     *
     * <pre>
     *日程评论音频
     * </pre>
     */
    com.google.protobuf.ByteString
        getCalCommentVoiceBytes();

    // optional string calCommentVideo = 7;
    /**
     * <code>optional string calCommentVideo = 7;</code>
     *
     * <pre>
     *日程评论视频
     * </pre>
     */
    boolean hasCalCommentVideo();
    /**
     * <code>optional string calCommentVideo = 7;</code>
     *
     * <pre>
     *日程评论视频
     * </pre>
     */
    java.lang.String getCalCommentVideo();
    /**
     * <code>optional string calCommentVideo = 7;</code>
     *
     * <pre>
     *日程评论视频
     * </pre>
     */
    com.google.protobuf.ByteString
        getCalCommentVideoBytes();

    // optional int64 longitude = 8;
    /**
     * <code>optional int64 longitude = 8;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    boolean hasLongitude();
    /**
     * <code>optional int64 longitude = 8;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    long getLongitude();

    // optional int64 latitude = 9;
    /**
     * <code>optional int64 latitude = 9;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    boolean hasLatitude();
    /**
     * <code>optional int64 latitude = 9;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    long getLatitude();

    // optional string localInfo = 10;
    /**
     * <code>optional string localInfo = 10;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    boolean hasLocalInfo();
    /**
     * <code>optional string localInfo = 10;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    java.lang.String getLocalInfo();
    /**
     * <code>optional string localInfo = 10;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getLocalInfoBytes();

    // optional int32 enabled = 11;
    /**
     * <code>optional int32 enabled = 11;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    boolean hasEnabled();
    /**
     * <code>optional int32 enabled = 11;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    int getEnabled();

    // optional int64 createTime = 12;
    /**
     * <code>optional int64 createTime = 12;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>optional int64 createTime = 12;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    long getCreateTime();

    // optional string creator = 13;
    /**
     * <code>optional string creator = 13;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    boolean hasCreator();
    /**
     * <code>optional string creator = 13;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    java.lang.String getCreator();
    /**
     * <code>optional string creator = 13;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreatorBytes();

    // optional int64 updateTime = 14;
    /**
     * <code>optional int64 updateTime = 14;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    boolean hasUpdateTime();
    /**
     * <code>optional int64 updateTime = 14;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    long getUpdateTime();

    // optional string updater = 15;
    /**
     * <code>optional string updater = 15;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    boolean hasUpdater();
    /**
     * <code>optional string updater = 15;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    java.lang.String getUpdater();
    /**
     * <code>optional string updater = 15;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    com.google.protobuf.ByteString
        getUpdaterBytes();
  }
  /**
   * Protobuf type {@code CalendarComment}
   */
  public static final class CalendarComment extends
      com.google.protobuf.GeneratedMessageLite
      implements CalendarCommentOrBuilder {
    // Use CalendarComment.newBuilder() to construct.
    private CalendarComment(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CalendarComment(boolean noInit) {}

    private static final CalendarComment defaultInstance;
    public static CalendarComment getDefaultInstance() {
      return defaultInstance;
    }

    public CalendarComment getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CalendarComment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userId_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              calendarId_ = input.readInt64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              calCommentDesc_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              calCommentPic_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              calCommentVoice_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              calCommentVideo_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              longitude_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              latitude_ = input.readInt64();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              localInfo_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              enabled_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              createTime_ = input.readInt64();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              creator_ = input.readBytes();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              updateTime_ = input.readInt64();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              updater_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CalendarComment> PARSER =
        new com.google.protobuf.AbstractParser<CalendarComment>() {
      public CalendarComment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CalendarComment(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CalendarComment> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // optional string userId = 2;
    public static final int USERID_FIELD_NUMBER = 2;
    private java.lang.Object userId_;
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 calendarId = 3;
    public static final int CALENDARID_FIELD_NUMBER = 3;
    private long calendarId_;
    /**
     * <code>optional int64 calendarId = 3;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    public boolean hasCalendarId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 calendarId = 3;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    public long getCalendarId() {
      return calendarId_;
    }

    // optional string calCommentDesc = 4;
    public static final int CALCOMMENTDESC_FIELD_NUMBER = 4;
    private java.lang.Object calCommentDesc_;
    /**
     * <code>optional string calCommentDesc = 4;</code>
     *
     * <pre>
     *日程评论内容
     * </pre>
     */
    public boolean hasCalCommentDesc() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string calCommentDesc = 4;</code>
     *
     * <pre>
     *日程评论内容
     * </pre>
     */
    public java.lang.String getCalCommentDesc() {
      java.lang.Object ref = calCommentDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          calCommentDesc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string calCommentDesc = 4;</code>
     *
     * <pre>
     *日程评论内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCalCommentDescBytes() {
      java.lang.Object ref = calCommentDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calCommentDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string calCommentPic = 5;
    public static final int CALCOMMENTPIC_FIELD_NUMBER = 5;
    private java.lang.Object calCommentPic_;
    /**
     * <code>optional string calCommentPic = 5;</code>
     *
     * <pre>
     *日程评论图片
     * </pre>
     */
    public boolean hasCalCommentPic() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string calCommentPic = 5;</code>
     *
     * <pre>
     *日程评论图片
     * </pre>
     */
    public java.lang.String getCalCommentPic() {
      java.lang.Object ref = calCommentPic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          calCommentPic_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string calCommentPic = 5;</code>
     *
     * <pre>
     *日程评论图片
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCalCommentPicBytes() {
      java.lang.Object ref = calCommentPic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calCommentPic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string calCommentVoice = 6;
    public static final int CALCOMMENTVOICE_FIELD_NUMBER = 6;
    private java.lang.Object calCommentVoice_;
    /**
     * <code>optional string calCommentVoice = 6;</code>
     *
     * <pre>
     *日程评论音频
     * </pre>
     */
    public boolean hasCalCommentVoice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string calCommentVoice = 6;</code>
     *
     * <pre>
     *日程评论音频
     * </pre>
     */
    public java.lang.String getCalCommentVoice() {
      java.lang.Object ref = calCommentVoice_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          calCommentVoice_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string calCommentVoice = 6;</code>
     *
     * <pre>
     *日程评论音频
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCalCommentVoiceBytes() {
      java.lang.Object ref = calCommentVoice_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calCommentVoice_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string calCommentVideo = 7;
    public static final int CALCOMMENTVIDEO_FIELD_NUMBER = 7;
    private java.lang.Object calCommentVideo_;
    /**
     * <code>optional string calCommentVideo = 7;</code>
     *
     * <pre>
     *日程评论视频
     * </pre>
     */
    public boolean hasCalCommentVideo() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string calCommentVideo = 7;</code>
     *
     * <pre>
     *日程评论视频
     * </pre>
     */
    public java.lang.String getCalCommentVideo() {
      java.lang.Object ref = calCommentVideo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          calCommentVideo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string calCommentVideo = 7;</code>
     *
     * <pre>
     *日程评论视频
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCalCommentVideoBytes() {
      java.lang.Object ref = calCommentVideo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calCommentVideo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 longitude = 8;
    public static final int LONGITUDE_FIELD_NUMBER = 8;
    private long longitude_;
    /**
     * <code>optional int64 longitude = 8;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 longitude = 8;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    public long getLongitude() {
      return longitude_;
    }

    // optional int64 latitude = 9;
    public static final int LATITUDE_FIELD_NUMBER = 9;
    private long latitude_;
    /**
     * <code>optional int64 latitude = 9;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 latitude = 9;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    public long getLatitude() {
      return latitude_;
    }

    // optional string localInfo = 10;
    public static final int LOCALINFO_FIELD_NUMBER = 10;
    private java.lang.Object localInfo_;
    /**
     * <code>optional string localInfo = 10;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    public boolean hasLocalInfo() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string localInfo = 10;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    public java.lang.String getLocalInfo() {
      java.lang.Object ref = localInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          localInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string localInfo = 10;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLocalInfoBytes() {
      java.lang.Object ref = localInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        localInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 enabled = 11;
    public static final int ENABLED_FIELD_NUMBER = 11;
    private int enabled_;
    /**
     * <code>optional int32 enabled = 11;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 enabled = 11;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    public int getEnabled() {
      return enabled_;
    }

    // optional int64 createTime = 12;
    public static final int CREATETIME_FIELD_NUMBER = 12;
    private long createTime_;
    /**
     * <code>optional int64 createTime = 12;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 createTime = 12;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public long getCreateTime() {
      return createTime_;
    }

    // optional string creator = 13;
    public static final int CREATOR_FIELD_NUMBER = 13;
    private java.lang.Object creator_;
    /**
     * <code>optional string creator = 13;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public boolean hasCreator() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string creator = 13;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public java.lang.String getCreator() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          creator_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string creator = 13;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreatorBytes() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        creator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 updateTime = 14;
    public static final int UPDATETIME_FIELD_NUMBER = 14;
    private long updateTime_;
    /**
     * <code>optional int64 updateTime = 14;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    public boolean hasUpdateTime() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 updateTime = 14;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    public long getUpdateTime() {
      return updateTime_;
    }

    // optional string updater = 15;
    public static final int UPDATER_FIELD_NUMBER = 15;
    private java.lang.Object updater_;
    /**
     * <code>optional string updater = 15;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    public boolean hasUpdater() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string updater = 15;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    public java.lang.String getUpdater() {
      java.lang.Object ref = updater_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          updater_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string updater = 15;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUpdaterBytes() {
      java.lang.Object ref = updater_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        updater_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      id_ = 0L;
      userId_ = "";
      calendarId_ = 0L;
      calCommentDesc_ = "";
      calCommentPic_ = "";
      calCommentVoice_ = "";
      calCommentVideo_ = "";
      longitude_ = 0L;
      latitude_ = 0L;
      localInfo_ = "";
      enabled_ = 0;
      createTime_ = 0L;
      creator_ = "";
      updateTime_ = 0L;
      updater_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, calendarId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getCalCommentDescBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getCalCommentPicBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getCalCommentVoiceBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getCalCommentVideoBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, longitude_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(9, latitude_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getLocalInfoBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, enabled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(12, createTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getCreatorBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, updateTime_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getUpdaterBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, calendarId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getCalCommentDescBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getCalCommentPicBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCalCommentVoiceBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getCalCommentVideoBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, longitude_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, latitude_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getLocalInfoBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, enabled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, createTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getCreatorBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, updateTime_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getUpdaterBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarComment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarComment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarComment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarComment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarComment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarComment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarComment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarComment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarComment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarComment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code CalendarComment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.CalendarComment, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.CalendarCommentOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        calendarId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        calCommentDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        calCommentPic_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        calCommentVoice_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        calCommentVideo_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        longitude_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        latitude_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        localInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        enabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        creator_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        updateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        updater_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.CalendarComment build() {
        com.vine.vinemars.net.pb.CalendarMessage.CalendarComment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.CalendarComment buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.CalendarComment result = new com.vine.vinemars.net.pb.CalendarMessage.CalendarComment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.calendarId_ = calendarId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.calCommentDesc_ = calCommentDesc_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.calCommentPic_ = calCommentPic_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.calCommentVoice_ = calCommentVoice_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.calCommentVideo_ = calCommentVideo_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.localInfo_ = localInfo_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.enabled_ = enabled_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.creator_ = creator_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.updateTime_ = updateTime_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.updater_ = updater_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUserId()) {
          bitField0_ |= 0x00000002;
          userId_ = other.userId_;
          
        }
        if (other.hasCalendarId()) {
          setCalendarId(other.getCalendarId());
        }
        if (other.hasCalCommentDesc()) {
          bitField0_ |= 0x00000008;
          calCommentDesc_ = other.calCommentDesc_;
          
        }
        if (other.hasCalCommentPic()) {
          bitField0_ |= 0x00000010;
          calCommentPic_ = other.calCommentPic_;
          
        }
        if (other.hasCalCommentVoice()) {
          bitField0_ |= 0x00000020;
          calCommentVoice_ = other.calCommentVoice_;
          
        }
        if (other.hasCalCommentVideo()) {
          bitField0_ |= 0x00000040;
          calCommentVideo_ = other.calCommentVideo_;
          
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLocalInfo()) {
          bitField0_ |= 0x00000200;
          localInfo_ = other.localInfo_;
          
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasCreator()) {
          bitField0_ |= 0x00001000;
          creator_ = other.creator_;
          
        }
        if (other.hasUpdateTime()) {
          setUpdateTime(other.getUpdateTime());
        }
        if (other.hasUpdater()) {
          bitField0_ |= 0x00004000;
          updater_ = other.updater_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.CalendarComment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.CalendarComment) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 id = 1;
      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        
        return this;
      }

      // optional string userId = 2;
      private java.lang.Object userId_ = "";
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = getDefaultInstance().getUserId();
        
        return this;
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }

      // optional int64 calendarId = 3;
      private long calendarId_ ;
      /**
       * <code>optional int64 calendarId = 3;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public boolean hasCalendarId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 calendarId = 3;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public long getCalendarId() {
        return calendarId_;
      }
      /**
       * <code>optional int64 calendarId = 3;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public Builder setCalendarId(long value) {
        bitField0_ |= 0x00000004;
        calendarId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calendarId = 3;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public Builder clearCalendarId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        calendarId_ = 0L;
        
        return this;
      }

      // optional string calCommentDesc = 4;
      private java.lang.Object calCommentDesc_ = "";
      /**
       * <code>optional string calCommentDesc = 4;</code>
       *
       * <pre>
       *日程评论内容
       * </pre>
       */
      public boolean hasCalCommentDesc() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string calCommentDesc = 4;</code>
       *
       * <pre>
       *日程评论内容
       * </pre>
       */
      public java.lang.String getCalCommentDesc() {
        java.lang.Object ref = calCommentDesc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          calCommentDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string calCommentDesc = 4;</code>
       *
       * <pre>
       *日程评论内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCalCommentDescBytes() {
        java.lang.Object ref = calCommentDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calCommentDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string calCommentDesc = 4;</code>
       *
       * <pre>
       *日程评论内容
       * </pre>
       */
      public Builder setCalCommentDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        calCommentDesc_ = value;
        
        return this;
      }
      /**
       * <code>optional string calCommentDesc = 4;</code>
       *
       * <pre>
       *日程评论内容
       * </pre>
       */
      public Builder clearCalCommentDesc() {
        bitField0_ = (bitField0_ & ~0x00000008);
        calCommentDesc_ = getDefaultInstance().getCalCommentDesc();
        
        return this;
      }
      /**
       * <code>optional string calCommentDesc = 4;</code>
       *
       * <pre>
       *日程评论内容
       * </pre>
       */
      public Builder setCalCommentDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        calCommentDesc_ = value;
        
        return this;
      }

      // optional string calCommentPic = 5;
      private java.lang.Object calCommentPic_ = "";
      /**
       * <code>optional string calCommentPic = 5;</code>
       *
       * <pre>
       *日程评论图片
       * </pre>
       */
      public boolean hasCalCommentPic() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string calCommentPic = 5;</code>
       *
       * <pre>
       *日程评论图片
       * </pre>
       */
      public java.lang.String getCalCommentPic() {
        java.lang.Object ref = calCommentPic_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          calCommentPic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string calCommentPic = 5;</code>
       *
       * <pre>
       *日程评论图片
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCalCommentPicBytes() {
        java.lang.Object ref = calCommentPic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calCommentPic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string calCommentPic = 5;</code>
       *
       * <pre>
       *日程评论图片
       * </pre>
       */
      public Builder setCalCommentPic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        calCommentPic_ = value;
        
        return this;
      }
      /**
       * <code>optional string calCommentPic = 5;</code>
       *
       * <pre>
       *日程评论图片
       * </pre>
       */
      public Builder clearCalCommentPic() {
        bitField0_ = (bitField0_ & ~0x00000010);
        calCommentPic_ = getDefaultInstance().getCalCommentPic();
        
        return this;
      }
      /**
       * <code>optional string calCommentPic = 5;</code>
       *
       * <pre>
       *日程评论图片
       * </pre>
       */
      public Builder setCalCommentPicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        calCommentPic_ = value;
        
        return this;
      }

      // optional string calCommentVoice = 6;
      private java.lang.Object calCommentVoice_ = "";
      /**
       * <code>optional string calCommentVoice = 6;</code>
       *
       * <pre>
       *日程评论音频
       * </pre>
       */
      public boolean hasCalCommentVoice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string calCommentVoice = 6;</code>
       *
       * <pre>
       *日程评论音频
       * </pre>
       */
      public java.lang.String getCalCommentVoice() {
        java.lang.Object ref = calCommentVoice_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          calCommentVoice_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string calCommentVoice = 6;</code>
       *
       * <pre>
       *日程评论音频
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCalCommentVoiceBytes() {
        java.lang.Object ref = calCommentVoice_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calCommentVoice_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string calCommentVoice = 6;</code>
       *
       * <pre>
       *日程评论音频
       * </pre>
       */
      public Builder setCalCommentVoice(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        calCommentVoice_ = value;
        
        return this;
      }
      /**
       * <code>optional string calCommentVoice = 6;</code>
       *
       * <pre>
       *日程评论音频
       * </pre>
       */
      public Builder clearCalCommentVoice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        calCommentVoice_ = getDefaultInstance().getCalCommentVoice();
        
        return this;
      }
      /**
       * <code>optional string calCommentVoice = 6;</code>
       *
       * <pre>
       *日程评论音频
       * </pre>
       */
      public Builder setCalCommentVoiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        calCommentVoice_ = value;
        
        return this;
      }

      // optional string calCommentVideo = 7;
      private java.lang.Object calCommentVideo_ = "";
      /**
       * <code>optional string calCommentVideo = 7;</code>
       *
       * <pre>
       *日程评论视频
       * </pre>
       */
      public boolean hasCalCommentVideo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string calCommentVideo = 7;</code>
       *
       * <pre>
       *日程评论视频
       * </pre>
       */
      public java.lang.String getCalCommentVideo() {
        java.lang.Object ref = calCommentVideo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          calCommentVideo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string calCommentVideo = 7;</code>
       *
       * <pre>
       *日程评论视频
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCalCommentVideoBytes() {
        java.lang.Object ref = calCommentVideo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calCommentVideo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string calCommentVideo = 7;</code>
       *
       * <pre>
       *日程评论视频
       * </pre>
       */
      public Builder setCalCommentVideo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        calCommentVideo_ = value;
        
        return this;
      }
      /**
       * <code>optional string calCommentVideo = 7;</code>
       *
       * <pre>
       *日程评论视频
       * </pre>
       */
      public Builder clearCalCommentVideo() {
        bitField0_ = (bitField0_ & ~0x00000040);
        calCommentVideo_ = getDefaultInstance().getCalCommentVideo();
        
        return this;
      }
      /**
       * <code>optional string calCommentVideo = 7;</code>
       *
       * <pre>
       *日程评论视频
       * </pre>
       */
      public Builder setCalCommentVideoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        calCommentVideo_ = value;
        
        return this;
      }

      // optional int64 longitude = 8;
      private long longitude_ ;
      /**
       * <code>optional int64 longitude = 8;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 longitude = 8;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public long getLongitude() {
        return longitude_;
      }
      /**
       * <code>optional int64 longitude = 8;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public Builder setLongitude(long value) {
        bitField0_ |= 0x00000080;
        longitude_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 longitude = 8;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000080);
        longitude_ = 0L;
        
        return this;
      }

      // optional int64 latitude = 9;
      private long latitude_ ;
      /**
       * <code>optional int64 latitude = 9;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 latitude = 9;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public long getLatitude() {
        return latitude_;
      }
      /**
       * <code>optional int64 latitude = 9;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public Builder setLatitude(long value) {
        bitField0_ |= 0x00000100;
        latitude_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 latitude = 9;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000100);
        latitude_ = 0L;
        
        return this;
      }

      // optional string localInfo = 10;
      private java.lang.Object localInfo_ = "";
      /**
       * <code>optional string localInfo = 10;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public boolean hasLocalInfo() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string localInfo = 10;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public java.lang.String getLocalInfo() {
        java.lang.Object ref = localInfo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          localInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string localInfo = 10;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLocalInfoBytes() {
        java.lang.Object ref = localInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          localInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string localInfo = 10;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public Builder setLocalInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        localInfo_ = value;
        
        return this;
      }
      /**
       * <code>optional string localInfo = 10;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public Builder clearLocalInfo() {
        bitField0_ = (bitField0_ & ~0x00000200);
        localInfo_ = getDefaultInstance().getLocalInfo();
        
        return this;
      }
      /**
       * <code>optional string localInfo = 10;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public Builder setLocalInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        localInfo_ = value;
        
        return this;
      }

      // optional int32 enabled = 11;
      private int enabled_ ;
      /**
       * <code>optional int32 enabled = 11;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 enabled = 11;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public int getEnabled() {
        return enabled_;
      }
      /**
       * <code>optional int32 enabled = 11;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public Builder setEnabled(int value) {
        bitField0_ |= 0x00000400;
        enabled_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 enabled = 11;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000400);
        enabled_ = 0;
        
        return this;
      }

      // optional int64 createTime = 12;
      private long createTime_ ;
      /**
       * <code>optional int64 createTime = 12;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 createTime = 12;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>optional int64 createTime = 12;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00000800;
        createTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 createTime = 12;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        createTime_ = 0L;
        
        return this;
      }

      // optional string creator = 13;
      private java.lang.Object creator_ = "";
      /**
       * <code>optional string creator = 13;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public boolean hasCreator() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string creator = 13;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public java.lang.String getCreator() {
        java.lang.Object ref = creator_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          creator_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string creator = 13;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreatorBytes() {
        java.lang.Object ref = creator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          creator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string creator = 13;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder setCreator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        creator_ = value;
        
        return this;
      }
      /**
       * <code>optional string creator = 13;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder clearCreator() {
        bitField0_ = (bitField0_ & ~0x00001000);
        creator_ = getDefaultInstance().getCreator();
        
        return this;
      }
      /**
       * <code>optional string creator = 13;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder setCreatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        creator_ = value;
        
        return this;
      }

      // optional int64 updateTime = 14;
      private long updateTime_ ;
      /**
       * <code>optional int64 updateTime = 14;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public boolean hasUpdateTime() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 updateTime = 14;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public long getUpdateTime() {
        return updateTime_;
      }
      /**
       * <code>optional int64 updateTime = 14;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public Builder setUpdateTime(long value) {
        bitField0_ |= 0x00002000;
        updateTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 updateTime = 14;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public Builder clearUpdateTime() {
        bitField0_ = (bitField0_ & ~0x00002000);
        updateTime_ = 0L;
        
        return this;
      }

      // optional string updater = 15;
      private java.lang.Object updater_ = "";
      /**
       * <code>optional string updater = 15;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public boolean hasUpdater() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string updater = 15;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public java.lang.String getUpdater() {
        java.lang.Object ref = updater_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          updater_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string updater = 15;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUpdaterBytes() {
        java.lang.Object ref = updater_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          updater_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string updater = 15;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public Builder setUpdater(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        updater_ = value;
        
        return this;
      }
      /**
       * <code>optional string updater = 15;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public Builder clearUpdater() {
        bitField0_ = (bitField0_ & ~0x00004000);
        updater_ = getDefaultInstance().getUpdater();
        
        return this;
      }
      /**
       * <code>optional string updater = 15;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public Builder setUpdaterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        updater_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CalendarComment)
    }

    static {
      defaultInstance = new CalendarComment(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CalendarComment)
  }

  public interface CalendarOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int64 id = 1;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    long getId();

    // optional string userId = 2;
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // optional int64 calCategoryId = 3;
    /**
     * <code>optional int64 calCategoryId = 3;</code>
     *
     * <pre>
     *日程分类Id
     * </pre>
     */
    boolean hasCalCategoryId();
    /**
     * <code>optional int64 calCategoryId = 3;</code>
     *
     * <pre>
     *日程分类Id
     * </pre>
     */
    long getCalCategoryId();

    // optional string calName = 4;
    /**
     * <code>optional string calName = 4;</code>
     *
     * <pre>
     *日程名称
     * </pre>
     */
    boolean hasCalName();
    /**
     * <code>optional string calName = 4;</code>
     *
     * <pre>
     *日程名称
     * </pre>
     */
    java.lang.String getCalName();
    /**
     * <code>optional string calName = 4;</code>
     *
     * <pre>
     *日程名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getCalNameBytes();

    // optional string calDesc = 5;
    /**
     * <code>optional string calDesc = 5;</code>
     *
     * <pre>
     *日程文字内容
     * </pre>
     */
    boolean hasCalDesc();
    /**
     * <code>optional string calDesc = 5;</code>
     *
     * <pre>
     *日程文字内容
     * </pre>
     */
    java.lang.String getCalDesc();
    /**
     * <code>optional string calDesc = 5;</code>
     *
     * <pre>
     *日程文字内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getCalDescBytes();

    // optional string calPic = 6;
    /**
     * <code>optional string calPic = 6;</code>
     *
     * <pre>
     *日程图片
     * </pre>
     */
    boolean hasCalPic();
    /**
     * <code>optional string calPic = 6;</code>
     *
     * <pre>
     *日程图片
     * </pre>
     */
    java.lang.String getCalPic();
    /**
     * <code>optional string calPic = 6;</code>
     *
     * <pre>
     *日程图片
     * </pre>
     */
    com.google.protobuf.ByteString
        getCalPicBytes();

    // optional string calVoice = 7;
    /**
     * <code>optional string calVoice = 7;</code>
     *
     * <pre>
     *日程音频
     * </pre>
     */
    boolean hasCalVoice();
    /**
     * <code>optional string calVoice = 7;</code>
     *
     * <pre>
     *日程音频
     * </pre>
     */
    java.lang.String getCalVoice();
    /**
     * <code>optional string calVoice = 7;</code>
     *
     * <pre>
     *日程音频
     * </pre>
     */
    com.google.protobuf.ByteString
        getCalVoiceBytes();

    // optional string calVideo = 8;
    /**
     * <code>optional string calVideo = 8;</code>
     *
     * <pre>
     *日程视频
     * </pre>
     */
    boolean hasCalVideo();
    /**
     * <code>optional string calVideo = 8;</code>
     *
     * <pre>
     *日程视频
     * </pre>
     */
    java.lang.String getCalVideo();
    /**
     * <code>optional string calVideo = 8;</code>
     *
     * <pre>
     *日程视频
     * </pre>
     */
    com.google.protobuf.ByteString
        getCalVideoBytes();

    // optional int32 priority = 9;
    /**
     * <code>optional int32 priority = 9;</code>
     *
     * <pre>
     *优先级
     * </pre>
     */
    boolean hasPriority();
    /**
     * <code>optional int32 priority = 9;</code>
     *
     * <pre>
     *优先级
     * </pre>
     */
    int getPriority();

    // optional int32 alterEnabled = 10;
    /**
     * <code>optional int32 alterEnabled = 10;</code>
     *
     * <pre>
     *是否提醒1提醒0不提醒
     * </pre>
     */
    boolean hasAlterEnabled();
    /**
     * <code>optional int32 alterEnabled = 10;</code>
     *
     * <pre>
     *是否提醒1提醒0不提醒
     * </pre>
     */
    int getAlterEnabled();

    // optional int32 openEnabled = 11;
    /**
     * <code>optional int32 openEnabled = 11;</code>
     *
     * <pre>
     *是否公开1提醒0不提醒
     * </pre>
     */
    boolean hasOpenEnabled();
    /**
     * <code>optional int32 openEnabled = 11;</code>
     *
     * <pre>
     *是否公开1提醒0不提醒
     * </pre>
     */
    int getOpenEnabled();

    // optional int32 endEnabled = 12;
    /**
     * <code>optional int32 endEnabled = 12;</code>
     *
     * <pre>
     *是否结束1未结束0结束
     * </pre>
     */
    boolean hasEndEnabled();
    /**
     * <code>optional int32 endEnabled = 12;</code>
     *
     * <pre>
     *是否结束1未结束0结束
     * </pre>
     */
    int getEndEnabled();

    // optional int64 alterTime = 13;
    /**
     * <code>optional int64 alterTime = 13;</code>
     *
     * <pre>
     *提醒时间
     * </pre>
     */
    boolean hasAlterTime();
    /**
     * <code>optional int64 alterTime = 13;</code>
     *
     * <pre>
     *提醒时间
     * </pre>
     */
    long getAlterTime();

    // optional int32 alterForward = 14;
    /**
     * <code>optional int32 alterForward = 14;</code>
     *
     * <pre>
     *提前几分钟提醒
     * </pre>
     */
    boolean hasAlterForward();
    /**
     * <code>optional int32 alterForward = 14;</code>
     *
     * <pre>
     *提前几分钟提醒
     * </pre>
     */
    int getAlterForward();

    // optional int64 longitude = 15;
    /**
     * <code>optional int64 longitude = 15;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    boolean hasLongitude();
    /**
     * <code>optional int64 longitude = 15;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    long getLongitude();

    // optional int64 latitude = 16;
    /**
     * <code>optional int64 latitude = 16;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    boolean hasLatitude();
    /**
     * <code>optional int64 latitude = 16;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    long getLatitude();

    // optional string localInfo = 17;
    /**
     * <code>optional string localInfo = 17;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    boolean hasLocalInfo();
    /**
     * <code>optional string localInfo = 17;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    java.lang.String getLocalInfo();
    /**
     * <code>optional string localInfo = 17;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getLocalInfoBytes();

    // optional int32 enabled = 18;
    /**
     * <code>optional int32 enabled = 18;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    boolean hasEnabled();
    /**
     * <code>optional int32 enabled = 18;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    int getEnabled();

    // optional int64 createTime = 19;
    /**
     * <code>optional int64 createTime = 19;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>optional int64 createTime = 19;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    long getCreateTime();

    // optional string creator = 20;
    /**
     * <code>optional string creator = 20;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    boolean hasCreator();
    /**
     * <code>optional string creator = 20;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    java.lang.String getCreator();
    /**
     * <code>optional string creator = 20;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreatorBytes();

    // optional int64 updateTime = 21;
    /**
     * <code>optional int64 updateTime = 21;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    boolean hasUpdateTime();
    /**
     * <code>optional int64 updateTime = 21;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    long getUpdateTime();

    // optional string updater = 22;
    /**
     * <code>optional string updater = 22;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    boolean hasUpdater();
    /**
     * <code>optional string updater = 22;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    java.lang.String getUpdater();
    /**
     * <code>optional string updater = 22;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    com.google.protobuf.ByteString
        getUpdaterBytes();

    // repeated .CalendarComment calendarComments = 23;
    /**
     * <code>repeated .CalendarComment calendarComments = 23;</code>
     *
     * <pre>
     *评论追加
     * </pre>
     */
    java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> 
        getCalendarCommentsList();
    /**
     * <code>repeated .CalendarComment calendarComments = 23;</code>
     *
     * <pre>
     *评论追加
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComments(int index);
    /**
     * <code>repeated .CalendarComment calendarComments = 23;</code>
     *
     * <pre>
     *评论追加
     * </pre>
     */
    int getCalendarCommentsCount();
  }
  /**
   * Protobuf type {@code Calendar}
   */
  public static final class Calendar extends
      com.google.protobuf.GeneratedMessageLite
      implements CalendarOrBuilder {
    // Use Calendar.newBuilder() to construct.
    private Calendar(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Calendar(boolean noInit) {}

    private static final Calendar defaultInstance;
    public static Calendar getDefaultInstance() {
      return defaultInstance;
    }

    public Calendar getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Calendar(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userId_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              calCategoryId_ = input.readInt64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              calName_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              calDesc_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              calPic_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              calVoice_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              calVideo_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              priority_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              alterEnabled_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              openEnabled_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              endEnabled_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              alterTime_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              alterForward_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              longitude_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              latitude_ = input.readInt64();
              break;
            }
            case 138: {
              bitField0_ |= 0x00010000;
              localInfo_ = input.readBytes();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              enabled_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              createTime_ = input.readInt64();
              break;
            }
            case 162: {
              bitField0_ |= 0x00080000;
              creator_ = input.readBytes();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              updateTime_ = input.readInt64();
              break;
            }
            case 178: {
              bitField0_ |= 0x00200000;
              updater_ = input.readBytes();
              break;
            }
            case 186: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                calendarComments_ = new java.util.ArrayList<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment>();
                mutable_bitField0_ |= 0x00400000;
              }
              calendarComments_.add(input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
          calendarComments_ = java.util.Collections.unmodifiableList(calendarComments_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Calendar> PARSER =
        new com.google.protobuf.AbstractParser<Calendar>() {
      public Calendar parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Calendar(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Calendar> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // optional string userId = 2;
    public static final int USERID_FIELD_NUMBER = 2;
    private java.lang.Object userId_;
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 calCategoryId = 3;
    public static final int CALCATEGORYID_FIELD_NUMBER = 3;
    private long calCategoryId_;
    /**
     * <code>optional int64 calCategoryId = 3;</code>
     *
     * <pre>
     *日程分类Id
     * </pre>
     */
    public boolean hasCalCategoryId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 calCategoryId = 3;</code>
     *
     * <pre>
     *日程分类Id
     * </pre>
     */
    public long getCalCategoryId() {
      return calCategoryId_;
    }

    // optional string calName = 4;
    public static final int CALNAME_FIELD_NUMBER = 4;
    private java.lang.Object calName_;
    /**
     * <code>optional string calName = 4;</code>
     *
     * <pre>
     *日程名称
     * </pre>
     */
    public boolean hasCalName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string calName = 4;</code>
     *
     * <pre>
     *日程名称
     * </pre>
     */
    public java.lang.String getCalName() {
      java.lang.Object ref = calName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          calName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string calName = 4;</code>
     *
     * <pre>
     *日程名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCalNameBytes() {
      java.lang.Object ref = calName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string calDesc = 5;
    public static final int CALDESC_FIELD_NUMBER = 5;
    private java.lang.Object calDesc_;
    /**
     * <code>optional string calDesc = 5;</code>
     *
     * <pre>
     *日程文字内容
     * </pre>
     */
    public boolean hasCalDesc() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string calDesc = 5;</code>
     *
     * <pre>
     *日程文字内容
     * </pre>
     */
    public java.lang.String getCalDesc() {
      java.lang.Object ref = calDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          calDesc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string calDesc = 5;</code>
     *
     * <pre>
     *日程文字内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCalDescBytes() {
      java.lang.Object ref = calDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string calPic = 6;
    public static final int CALPIC_FIELD_NUMBER = 6;
    private java.lang.Object calPic_;
    /**
     * <code>optional string calPic = 6;</code>
     *
     * <pre>
     *日程图片
     * </pre>
     */
    public boolean hasCalPic() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string calPic = 6;</code>
     *
     * <pre>
     *日程图片
     * </pre>
     */
    public java.lang.String getCalPic() {
      java.lang.Object ref = calPic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          calPic_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string calPic = 6;</code>
     *
     * <pre>
     *日程图片
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCalPicBytes() {
      java.lang.Object ref = calPic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calPic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string calVoice = 7;
    public static final int CALVOICE_FIELD_NUMBER = 7;
    private java.lang.Object calVoice_;
    /**
     * <code>optional string calVoice = 7;</code>
     *
     * <pre>
     *日程音频
     * </pre>
     */
    public boolean hasCalVoice() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string calVoice = 7;</code>
     *
     * <pre>
     *日程音频
     * </pre>
     */
    public java.lang.String getCalVoice() {
      java.lang.Object ref = calVoice_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          calVoice_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string calVoice = 7;</code>
     *
     * <pre>
     *日程音频
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCalVoiceBytes() {
      java.lang.Object ref = calVoice_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calVoice_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string calVideo = 8;
    public static final int CALVIDEO_FIELD_NUMBER = 8;
    private java.lang.Object calVideo_;
    /**
     * <code>optional string calVideo = 8;</code>
     *
     * <pre>
     *日程视频
     * </pre>
     */
    public boolean hasCalVideo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string calVideo = 8;</code>
     *
     * <pre>
     *日程视频
     * </pre>
     */
    public java.lang.String getCalVideo() {
      java.lang.Object ref = calVideo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          calVideo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string calVideo = 8;</code>
     *
     * <pre>
     *日程视频
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCalVideoBytes() {
      java.lang.Object ref = calVideo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calVideo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 priority = 9;
    public static final int PRIORITY_FIELD_NUMBER = 9;
    private int priority_;
    /**
     * <code>optional int32 priority = 9;</code>
     *
     * <pre>
     *优先级
     * </pre>
     */
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 priority = 9;</code>
     *
     * <pre>
     *优先级
     * </pre>
     */
    public int getPriority() {
      return priority_;
    }

    // optional int32 alterEnabled = 10;
    public static final int ALTERENABLED_FIELD_NUMBER = 10;
    private int alterEnabled_;
    /**
     * <code>optional int32 alterEnabled = 10;</code>
     *
     * <pre>
     *是否提醒1提醒0不提醒
     * </pre>
     */
    public boolean hasAlterEnabled() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 alterEnabled = 10;</code>
     *
     * <pre>
     *是否提醒1提醒0不提醒
     * </pre>
     */
    public int getAlterEnabled() {
      return alterEnabled_;
    }

    // optional int32 openEnabled = 11;
    public static final int OPENENABLED_FIELD_NUMBER = 11;
    private int openEnabled_;
    /**
     * <code>optional int32 openEnabled = 11;</code>
     *
     * <pre>
     *是否公开1提醒0不提醒
     * </pre>
     */
    public boolean hasOpenEnabled() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 openEnabled = 11;</code>
     *
     * <pre>
     *是否公开1提醒0不提醒
     * </pre>
     */
    public int getOpenEnabled() {
      return openEnabled_;
    }

    // optional int32 endEnabled = 12;
    public static final int ENDENABLED_FIELD_NUMBER = 12;
    private int endEnabled_;
    /**
     * <code>optional int32 endEnabled = 12;</code>
     *
     * <pre>
     *是否结束1未结束0结束
     * </pre>
     */
    public boolean hasEndEnabled() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 endEnabled = 12;</code>
     *
     * <pre>
     *是否结束1未结束0结束
     * </pre>
     */
    public int getEndEnabled() {
      return endEnabled_;
    }

    // optional int64 alterTime = 13;
    public static final int ALTERTIME_FIELD_NUMBER = 13;
    private long alterTime_;
    /**
     * <code>optional int64 alterTime = 13;</code>
     *
     * <pre>
     *提醒时间
     * </pre>
     */
    public boolean hasAlterTime() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 alterTime = 13;</code>
     *
     * <pre>
     *提醒时间
     * </pre>
     */
    public long getAlterTime() {
      return alterTime_;
    }

    // optional int32 alterForward = 14;
    public static final int ALTERFORWARD_FIELD_NUMBER = 14;
    private int alterForward_;
    /**
     * <code>optional int32 alterForward = 14;</code>
     *
     * <pre>
     *提前几分钟提醒
     * </pre>
     */
    public boolean hasAlterForward() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 alterForward = 14;</code>
     *
     * <pre>
     *提前几分钟提醒
     * </pre>
     */
    public int getAlterForward() {
      return alterForward_;
    }

    // optional int64 longitude = 15;
    public static final int LONGITUDE_FIELD_NUMBER = 15;
    private long longitude_;
    /**
     * <code>optional int64 longitude = 15;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 longitude = 15;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    public long getLongitude() {
      return longitude_;
    }

    // optional int64 latitude = 16;
    public static final int LATITUDE_FIELD_NUMBER = 16;
    private long latitude_;
    /**
     * <code>optional int64 latitude = 16;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 latitude = 16;</code>
     *
     * <pre>
     *地理经度 TODO 微调：类型为decimal(10,7)
     * </pre>
     */
    public long getLatitude() {
      return latitude_;
    }

    // optional string localInfo = 17;
    public static final int LOCALINFO_FIELD_NUMBER = 17;
    private java.lang.Object localInfo_;
    /**
     * <code>optional string localInfo = 17;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    public boolean hasLocalInfo() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional string localInfo = 17;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    public java.lang.String getLocalInfo() {
      java.lang.Object ref = localInfo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          localInfo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string localInfo = 17;</code>
     *
     * <pre>
     *地理信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLocalInfoBytes() {
      java.lang.Object ref = localInfo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        localInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 enabled = 18;
    public static final int ENABLED_FIELD_NUMBER = 18;
    private int enabled_;
    /**
     * <code>optional int32 enabled = 18;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 enabled = 18;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    public int getEnabled() {
      return enabled_;
    }

    // optional int64 createTime = 19;
    public static final int CREATETIME_FIELD_NUMBER = 19;
    private long createTime_;
    /**
     * <code>optional int64 createTime = 19;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 createTime = 19;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public long getCreateTime() {
      return createTime_;
    }

    // optional string creator = 20;
    public static final int CREATOR_FIELD_NUMBER = 20;
    private java.lang.Object creator_;
    /**
     * <code>optional string creator = 20;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public boolean hasCreator() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional string creator = 20;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public java.lang.String getCreator() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          creator_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string creator = 20;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreatorBytes() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        creator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 updateTime = 21;
    public static final int UPDATETIME_FIELD_NUMBER = 21;
    private long updateTime_;
    /**
     * <code>optional int64 updateTime = 21;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    public boolean hasUpdateTime() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 updateTime = 21;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    public long getUpdateTime() {
      return updateTime_;
    }

    // optional string updater = 22;
    public static final int UPDATER_FIELD_NUMBER = 22;
    private java.lang.Object updater_;
    /**
     * <code>optional string updater = 22;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    public boolean hasUpdater() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional string updater = 22;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    public java.lang.String getUpdater() {
      java.lang.Object ref = updater_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          updater_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string updater = 22;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUpdaterBytes() {
      java.lang.Object ref = updater_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        updater_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .CalendarComment calendarComments = 23;
    public static final int CALENDARCOMMENTS_FIELD_NUMBER = 23;
    private java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> calendarComments_;
    /**
     * <code>repeated .CalendarComment calendarComments = 23;</code>
     *
     * <pre>
     *评论追加
     * </pre>
     */
    public java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> getCalendarCommentsList() {
      return calendarComments_;
    }
    /**
     * <code>repeated .CalendarComment calendarComments = 23;</code>
     *
     * <pre>
     *评论追加
     * </pre>
     */
    public java.util.List<? extends com.vine.vinemars.net.pb.CalendarMessage.CalendarCommentOrBuilder> 
        getCalendarCommentsOrBuilderList() {
      return calendarComments_;
    }
    /**
     * <code>repeated .CalendarComment calendarComments = 23;</code>
     *
     * <pre>
     *评论追加
     * </pre>
     */
    public int getCalendarCommentsCount() {
      return calendarComments_.size();
    }
    /**
     * <code>repeated .CalendarComment calendarComments = 23;</code>
     *
     * <pre>
     *评论追加
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComments(int index) {
      return calendarComments_.get(index);
    }
    /**
     * <code>repeated .CalendarComment calendarComments = 23;</code>
     *
     * <pre>
     *评论追加
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarCommentOrBuilder getCalendarCommentsOrBuilder(
        int index) {
      return calendarComments_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      userId_ = "";
      calCategoryId_ = 0L;
      calName_ = "";
      calDesc_ = "";
      calPic_ = "";
      calVoice_ = "";
      calVideo_ = "";
      priority_ = 0;
      alterEnabled_ = 0;
      openEnabled_ = 0;
      endEnabled_ = 0;
      alterTime_ = 0L;
      alterForward_ = 0;
      longitude_ = 0L;
      latitude_ = 0L;
      localInfo_ = "";
      enabled_ = 0;
      createTime_ = 0L;
      creator_ = "";
      updateTime_ = 0L;
      updater_ = "";
      calendarComments_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, calCategoryId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getCalNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getCalDescBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getCalPicBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getCalVoiceBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getCalVideoBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, priority_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, alterEnabled_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, openEnabled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, endEnabled_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, alterTime_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, alterForward_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(15, longitude_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(16, latitude_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(17, getLocalInfoBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, enabled_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(19, createTime_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBytes(20, getCreatorBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(21, updateTime_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBytes(22, getUpdaterBytes());
      }
      for (int i = 0; i < calendarComments_.size(); i++) {
        output.writeMessage(23, calendarComments_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, calCategoryId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getCalNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getCalDescBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCalPicBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getCalVoiceBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getCalVideoBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, priority_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, alterEnabled_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, openEnabled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, endEnabled_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, alterTime_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, alterForward_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, longitude_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, latitude_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getLocalInfoBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, enabled_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, createTime_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, getCreatorBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, updateTime_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(22, getUpdaterBytes());
      }
      for (int i = 0; i < calendarComments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, calendarComments_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.Calendar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.Calendar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.Calendar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.Calendar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.Calendar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.Calendar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.Calendar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.Calendar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.Calendar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.Calendar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.Calendar prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Calendar}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.Calendar, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.CalendarOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.Calendar.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        calCategoryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        calName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        calDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        calPic_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        calVoice_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        calVideo_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        priority_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        alterEnabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        openEnabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        endEnabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        alterTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        alterForward_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        longitude_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        latitude_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        localInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        enabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        creator_ = "";
        bitField0_ = (bitField0_ & ~0x00080000);
        updateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00100000);
        updater_ = "";
        bitField0_ = (bitField0_ & ~0x00200000);
        calendarComments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.Calendar getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.Calendar build() {
        com.vine.vinemars.net.pb.CalendarMessage.Calendar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.Calendar buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.Calendar result = new com.vine.vinemars.net.pb.CalendarMessage.Calendar(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.calCategoryId_ = calCategoryId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.calName_ = calName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.calDesc_ = calDesc_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.calPic_ = calPic_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.calVoice_ = calVoice_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.calVideo_ = calVideo_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.priority_ = priority_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.alterEnabled_ = alterEnabled_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.openEnabled_ = openEnabled_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.endEnabled_ = endEnabled_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.alterTime_ = alterTime_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.alterForward_ = alterForward_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.localInfo_ = localInfo_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.enabled_ = enabled_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.creator_ = creator_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.updateTime_ = updateTime_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.updater_ = updater_;
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          calendarComments_ = java.util.Collections.unmodifiableList(calendarComments_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.calendarComments_ = calendarComments_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.Calendar other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUserId()) {
          bitField0_ |= 0x00000002;
          userId_ = other.userId_;
          
        }
        if (other.hasCalCategoryId()) {
          setCalCategoryId(other.getCalCategoryId());
        }
        if (other.hasCalName()) {
          bitField0_ |= 0x00000008;
          calName_ = other.calName_;
          
        }
        if (other.hasCalDesc()) {
          bitField0_ |= 0x00000010;
          calDesc_ = other.calDesc_;
          
        }
        if (other.hasCalPic()) {
          bitField0_ |= 0x00000020;
          calPic_ = other.calPic_;
          
        }
        if (other.hasCalVoice()) {
          bitField0_ |= 0x00000040;
          calVoice_ = other.calVoice_;
          
        }
        if (other.hasCalVideo()) {
          bitField0_ |= 0x00000080;
          calVideo_ = other.calVideo_;
          
        }
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        if (other.hasAlterEnabled()) {
          setAlterEnabled(other.getAlterEnabled());
        }
        if (other.hasOpenEnabled()) {
          setOpenEnabled(other.getOpenEnabled());
        }
        if (other.hasEndEnabled()) {
          setEndEnabled(other.getEndEnabled());
        }
        if (other.hasAlterTime()) {
          setAlterTime(other.getAlterTime());
        }
        if (other.hasAlterForward()) {
          setAlterForward(other.getAlterForward());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLocalInfo()) {
          bitField0_ |= 0x00010000;
          localInfo_ = other.localInfo_;
          
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasCreator()) {
          bitField0_ |= 0x00080000;
          creator_ = other.creator_;
          
        }
        if (other.hasUpdateTime()) {
          setUpdateTime(other.getUpdateTime());
        }
        if (other.hasUpdater()) {
          bitField0_ |= 0x00200000;
          updater_ = other.updater_;
          
        }
        if (!other.calendarComments_.isEmpty()) {
          if (calendarComments_.isEmpty()) {
            calendarComments_ = other.calendarComments_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureCalendarCommentsIsMutable();
            calendarComments_.addAll(other.calendarComments_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.Calendar parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.Calendar) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 id = 1;
      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        
        return this;
      }

      // optional string userId = 2;
      private java.lang.Object userId_ = "";
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = getDefaultInstance().getUserId();
        
        return this;
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }

      // optional int64 calCategoryId = 3;
      private long calCategoryId_ ;
      /**
       * <code>optional int64 calCategoryId = 3;</code>
       *
       * <pre>
       *日程分类Id
       * </pre>
       */
      public boolean hasCalCategoryId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 calCategoryId = 3;</code>
       *
       * <pre>
       *日程分类Id
       * </pre>
       */
      public long getCalCategoryId() {
        return calCategoryId_;
      }
      /**
       * <code>optional int64 calCategoryId = 3;</code>
       *
       * <pre>
       *日程分类Id
       * </pre>
       */
      public Builder setCalCategoryId(long value) {
        bitField0_ |= 0x00000004;
        calCategoryId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calCategoryId = 3;</code>
       *
       * <pre>
       *日程分类Id
       * </pre>
       */
      public Builder clearCalCategoryId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        calCategoryId_ = 0L;
        
        return this;
      }

      // optional string calName = 4;
      private java.lang.Object calName_ = "";
      /**
       * <code>optional string calName = 4;</code>
       *
       * <pre>
       *日程名称
       * </pre>
       */
      public boolean hasCalName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string calName = 4;</code>
       *
       * <pre>
       *日程名称
       * </pre>
       */
      public java.lang.String getCalName() {
        java.lang.Object ref = calName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          calName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string calName = 4;</code>
       *
       * <pre>
       *日程名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCalNameBytes() {
        java.lang.Object ref = calName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string calName = 4;</code>
       *
       * <pre>
       *日程名称
       * </pre>
       */
      public Builder setCalName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        calName_ = value;
        
        return this;
      }
      /**
       * <code>optional string calName = 4;</code>
       *
       * <pre>
       *日程名称
       * </pre>
       */
      public Builder clearCalName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        calName_ = getDefaultInstance().getCalName();
        
        return this;
      }
      /**
       * <code>optional string calName = 4;</code>
       *
       * <pre>
       *日程名称
       * </pre>
       */
      public Builder setCalNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        calName_ = value;
        
        return this;
      }

      // optional string calDesc = 5;
      private java.lang.Object calDesc_ = "";
      /**
       * <code>optional string calDesc = 5;</code>
       *
       * <pre>
       *日程文字内容
       * </pre>
       */
      public boolean hasCalDesc() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string calDesc = 5;</code>
       *
       * <pre>
       *日程文字内容
       * </pre>
       */
      public java.lang.String getCalDesc() {
        java.lang.Object ref = calDesc_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          calDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string calDesc = 5;</code>
       *
       * <pre>
       *日程文字内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCalDescBytes() {
        java.lang.Object ref = calDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string calDesc = 5;</code>
       *
       * <pre>
       *日程文字内容
       * </pre>
       */
      public Builder setCalDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        calDesc_ = value;
        
        return this;
      }
      /**
       * <code>optional string calDesc = 5;</code>
       *
       * <pre>
       *日程文字内容
       * </pre>
       */
      public Builder clearCalDesc() {
        bitField0_ = (bitField0_ & ~0x00000010);
        calDesc_ = getDefaultInstance().getCalDesc();
        
        return this;
      }
      /**
       * <code>optional string calDesc = 5;</code>
       *
       * <pre>
       *日程文字内容
       * </pre>
       */
      public Builder setCalDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        calDesc_ = value;
        
        return this;
      }

      // optional string calPic = 6;
      private java.lang.Object calPic_ = "";
      /**
       * <code>optional string calPic = 6;</code>
       *
       * <pre>
       *日程图片
       * </pre>
       */
      public boolean hasCalPic() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string calPic = 6;</code>
       *
       * <pre>
       *日程图片
       * </pre>
       */
      public java.lang.String getCalPic() {
        java.lang.Object ref = calPic_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          calPic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string calPic = 6;</code>
       *
       * <pre>
       *日程图片
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCalPicBytes() {
        java.lang.Object ref = calPic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calPic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string calPic = 6;</code>
       *
       * <pre>
       *日程图片
       * </pre>
       */
      public Builder setCalPic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        calPic_ = value;
        
        return this;
      }
      /**
       * <code>optional string calPic = 6;</code>
       *
       * <pre>
       *日程图片
       * </pre>
       */
      public Builder clearCalPic() {
        bitField0_ = (bitField0_ & ~0x00000020);
        calPic_ = getDefaultInstance().getCalPic();
        
        return this;
      }
      /**
       * <code>optional string calPic = 6;</code>
       *
       * <pre>
       *日程图片
       * </pre>
       */
      public Builder setCalPicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        calPic_ = value;
        
        return this;
      }

      // optional string calVoice = 7;
      private java.lang.Object calVoice_ = "";
      /**
       * <code>optional string calVoice = 7;</code>
       *
       * <pre>
       *日程音频
       * </pre>
       */
      public boolean hasCalVoice() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string calVoice = 7;</code>
       *
       * <pre>
       *日程音频
       * </pre>
       */
      public java.lang.String getCalVoice() {
        java.lang.Object ref = calVoice_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          calVoice_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string calVoice = 7;</code>
       *
       * <pre>
       *日程音频
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCalVoiceBytes() {
        java.lang.Object ref = calVoice_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calVoice_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string calVoice = 7;</code>
       *
       * <pre>
       *日程音频
       * </pre>
       */
      public Builder setCalVoice(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        calVoice_ = value;
        
        return this;
      }
      /**
       * <code>optional string calVoice = 7;</code>
       *
       * <pre>
       *日程音频
       * </pre>
       */
      public Builder clearCalVoice() {
        bitField0_ = (bitField0_ & ~0x00000040);
        calVoice_ = getDefaultInstance().getCalVoice();
        
        return this;
      }
      /**
       * <code>optional string calVoice = 7;</code>
       *
       * <pre>
       *日程音频
       * </pre>
       */
      public Builder setCalVoiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        calVoice_ = value;
        
        return this;
      }

      // optional string calVideo = 8;
      private java.lang.Object calVideo_ = "";
      /**
       * <code>optional string calVideo = 8;</code>
       *
       * <pre>
       *日程视频
       * </pre>
       */
      public boolean hasCalVideo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string calVideo = 8;</code>
       *
       * <pre>
       *日程视频
       * </pre>
       */
      public java.lang.String getCalVideo() {
        java.lang.Object ref = calVideo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          calVideo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string calVideo = 8;</code>
       *
       * <pre>
       *日程视频
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCalVideoBytes() {
        java.lang.Object ref = calVideo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calVideo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string calVideo = 8;</code>
       *
       * <pre>
       *日程视频
       * </pre>
       */
      public Builder setCalVideo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        calVideo_ = value;
        
        return this;
      }
      /**
       * <code>optional string calVideo = 8;</code>
       *
       * <pre>
       *日程视频
       * </pre>
       */
      public Builder clearCalVideo() {
        bitField0_ = (bitField0_ & ~0x00000080);
        calVideo_ = getDefaultInstance().getCalVideo();
        
        return this;
      }
      /**
       * <code>optional string calVideo = 8;</code>
       *
       * <pre>
       *日程视频
       * </pre>
       */
      public Builder setCalVideoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        calVideo_ = value;
        
        return this;
      }

      // optional int32 priority = 9;
      private int priority_ ;
      /**
       * <code>optional int32 priority = 9;</code>
       *
       * <pre>
       *优先级
       * </pre>
       */
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 priority = 9;</code>
       *
       * <pre>
       *优先级
       * </pre>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <code>optional int32 priority = 9;</code>
       *
       * <pre>
       *优先级
       * </pre>
       */
      public Builder setPriority(int value) {
        bitField0_ |= 0x00000100;
        priority_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 priority = 9;</code>
       *
       * <pre>
       *优先级
       * </pre>
       */
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000100);
        priority_ = 0;
        
        return this;
      }

      // optional int32 alterEnabled = 10;
      private int alterEnabled_ ;
      /**
       * <code>optional int32 alterEnabled = 10;</code>
       *
       * <pre>
       *是否提醒1提醒0不提醒
       * </pre>
       */
      public boolean hasAlterEnabled() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 alterEnabled = 10;</code>
       *
       * <pre>
       *是否提醒1提醒0不提醒
       * </pre>
       */
      public int getAlterEnabled() {
        return alterEnabled_;
      }
      /**
       * <code>optional int32 alterEnabled = 10;</code>
       *
       * <pre>
       *是否提醒1提醒0不提醒
       * </pre>
       */
      public Builder setAlterEnabled(int value) {
        bitField0_ |= 0x00000200;
        alterEnabled_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 alterEnabled = 10;</code>
       *
       * <pre>
       *是否提醒1提醒0不提醒
       * </pre>
       */
      public Builder clearAlterEnabled() {
        bitField0_ = (bitField0_ & ~0x00000200);
        alterEnabled_ = 0;
        
        return this;
      }

      // optional int32 openEnabled = 11;
      private int openEnabled_ ;
      /**
       * <code>optional int32 openEnabled = 11;</code>
       *
       * <pre>
       *是否公开1提醒0不提醒
       * </pre>
       */
      public boolean hasOpenEnabled() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 openEnabled = 11;</code>
       *
       * <pre>
       *是否公开1提醒0不提醒
       * </pre>
       */
      public int getOpenEnabled() {
        return openEnabled_;
      }
      /**
       * <code>optional int32 openEnabled = 11;</code>
       *
       * <pre>
       *是否公开1提醒0不提醒
       * </pre>
       */
      public Builder setOpenEnabled(int value) {
        bitField0_ |= 0x00000400;
        openEnabled_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 openEnabled = 11;</code>
       *
       * <pre>
       *是否公开1提醒0不提醒
       * </pre>
       */
      public Builder clearOpenEnabled() {
        bitField0_ = (bitField0_ & ~0x00000400);
        openEnabled_ = 0;
        
        return this;
      }

      // optional int32 endEnabled = 12;
      private int endEnabled_ ;
      /**
       * <code>optional int32 endEnabled = 12;</code>
       *
       * <pre>
       *是否结束1未结束0结束
       * </pre>
       */
      public boolean hasEndEnabled() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 endEnabled = 12;</code>
       *
       * <pre>
       *是否结束1未结束0结束
       * </pre>
       */
      public int getEndEnabled() {
        return endEnabled_;
      }
      /**
       * <code>optional int32 endEnabled = 12;</code>
       *
       * <pre>
       *是否结束1未结束0结束
       * </pre>
       */
      public Builder setEndEnabled(int value) {
        bitField0_ |= 0x00000800;
        endEnabled_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 endEnabled = 12;</code>
       *
       * <pre>
       *是否结束1未结束0结束
       * </pre>
       */
      public Builder clearEndEnabled() {
        bitField0_ = (bitField0_ & ~0x00000800);
        endEnabled_ = 0;
        
        return this;
      }

      // optional int64 alterTime = 13;
      private long alterTime_ ;
      /**
       * <code>optional int64 alterTime = 13;</code>
       *
       * <pre>
       *提醒时间
       * </pre>
       */
      public boolean hasAlterTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 alterTime = 13;</code>
       *
       * <pre>
       *提醒时间
       * </pre>
       */
      public long getAlterTime() {
        return alterTime_;
      }
      /**
       * <code>optional int64 alterTime = 13;</code>
       *
       * <pre>
       *提醒时间
       * </pre>
       */
      public Builder setAlterTime(long value) {
        bitField0_ |= 0x00001000;
        alterTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 alterTime = 13;</code>
       *
       * <pre>
       *提醒时间
       * </pre>
       */
      public Builder clearAlterTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        alterTime_ = 0L;
        
        return this;
      }

      // optional int32 alterForward = 14;
      private int alterForward_ ;
      /**
       * <code>optional int32 alterForward = 14;</code>
       *
       * <pre>
       *提前几分钟提醒
       * </pre>
       */
      public boolean hasAlterForward() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 alterForward = 14;</code>
       *
       * <pre>
       *提前几分钟提醒
       * </pre>
       */
      public int getAlterForward() {
        return alterForward_;
      }
      /**
       * <code>optional int32 alterForward = 14;</code>
       *
       * <pre>
       *提前几分钟提醒
       * </pre>
       */
      public Builder setAlterForward(int value) {
        bitField0_ |= 0x00002000;
        alterForward_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 alterForward = 14;</code>
       *
       * <pre>
       *提前几分钟提醒
       * </pre>
       */
      public Builder clearAlterForward() {
        bitField0_ = (bitField0_ & ~0x00002000);
        alterForward_ = 0;
        
        return this;
      }

      // optional int64 longitude = 15;
      private long longitude_ ;
      /**
       * <code>optional int64 longitude = 15;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int64 longitude = 15;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public long getLongitude() {
        return longitude_;
      }
      /**
       * <code>optional int64 longitude = 15;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public Builder setLongitude(long value) {
        bitField0_ |= 0x00004000;
        longitude_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 longitude = 15;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00004000);
        longitude_ = 0L;
        
        return this;
      }

      // optional int64 latitude = 16;
      private long latitude_ ;
      /**
       * <code>optional int64 latitude = 16;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 latitude = 16;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public long getLatitude() {
        return latitude_;
      }
      /**
       * <code>optional int64 latitude = 16;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public Builder setLatitude(long value) {
        bitField0_ |= 0x00008000;
        latitude_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 latitude = 16;</code>
       *
       * <pre>
       *地理经度 TODO 微调：类型为decimal(10,7)
       * </pre>
       */
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00008000);
        latitude_ = 0L;
        
        return this;
      }

      // optional string localInfo = 17;
      private java.lang.Object localInfo_ = "";
      /**
       * <code>optional string localInfo = 17;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public boolean hasLocalInfo() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string localInfo = 17;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public java.lang.String getLocalInfo() {
        java.lang.Object ref = localInfo_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          localInfo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string localInfo = 17;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLocalInfoBytes() {
        java.lang.Object ref = localInfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          localInfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string localInfo = 17;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public Builder setLocalInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        localInfo_ = value;
        
        return this;
      }
      /**
       * <code>optional string localInfo = 17;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public Builder clearLocalInfo() {
        bitField0_ = (bitField0_ & ~0x00010000);
        localInfo_ = getDefaultInstance().getLocalInfo();
        
        return this;
      }
      /**
       * <code>optional string localInfo = 17;</code>
       *
       * <pre>
       *地理信息
       * </pre>
       */
      public Builder setLocalInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        localInfo_ = value;
        
        return this;
      }

      // optional int32 enabled = 18;
      private int enabled_ ;
      /**
       * <code>optional int32 enabled = 18;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 enabled = 18;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public int getEnabled() {
        return enabled_;
      }
      /**
       * <code>optional int32 enabled = 18;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public Builder setEnabled(int value) {
        bitField0_ |= 0x00020000;
        enabled_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 enabled = 18;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00020000);
        enabled_ = 0;
        
        return this;
      }

      // optional int64 createTime = 19;
      private long createTime_ ;
      /**
       * <code>optional int64 createTime = 19;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int64 createTime = 19;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>optional int64 createTime = 19;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00040000;
        createTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 createTime = 19;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00040000);
        createTime_ = 0L;
        
        return this;
      }

      // optional string creator = 20;
      private java.lang.Object creator_ = "";
      /**
       * <code>optional string creator = 20;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public boolean hasCreator() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional string creator = 20;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public java.lang.String getCreator() {
        java.lang.Object ref = creator_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          creator_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string creator = 20;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreatorBytes() {
        java.lang.Object ref = creator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          creator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string creator = 20;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder setCreator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        creator_ = value;
        
        return this;
      }
      /**
       * <code>optional string creator = 20;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder clearCreator() {
        bitField0_ = (bitField0_ & ~0x00080000);
        creator_ = getDefaultInstance().getCreator();
        
        return this;
      }
      /**
       * <code>optional string creator = 20;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder setCreatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        creator_ = value;
        
        return this;
      }

      // optional int64 updateTime = 21;
      private long updateTime_ ;
      /**
       * <code>optional int64 updateTime = 21;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public boolean hasUpdateTime() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int64 updateTime = 21;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public long getUpdateTime() {
        return updateTime_;
      }
      /**
       * <code>optional int64 updateTime = 21;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public Builder setUpdateTime(long value) {
        bitField0_ |= 0x00100000;
        updateTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 updateTime = 21;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public Builder clearUpdateTime() {
        bitField0_ = (bitField0_ & ~0x00100000);
        updateTime_ = 0L;
        
        return this;
      }

      // optional string updater = 22;
      private java.lang.Object updater_ = "";
      /**
       * <code>optional string updater = 22;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public boolean hasUpdater() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional string updater = 22;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public java.lang.String getUpdater() {
        java.lang.Object ref = updater_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          updater_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string updater = 22;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUpdaterBytes() {
        java.lang.Object ref = updater_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          updater_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string updater = 22;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public Builder setUpdater(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        updater_ = value;
        
        return this;
      }
      /**
       * <code>optional string updater = 22;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public Builder clearUpdater() {
        bitField0_ = (bitField0_ & ~0x00200000);
        updater_ = getDefaultInstance().getUpdater();
        
        return this;
      }
      /**
       * <code>optional string updater = 22;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public Builder setUpdaterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        updater_ = value;
        
        return this;
      }

      // repeated .CalendarComment calendarComments = 23;
      private java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> calendarComments_ =
        java.util.Collections.emptyList();
      private void ensureCalendarCommentsIsMutable() {
        if (!((bitField0_ & 0x00400000) == 0x00400000)) {
          calendarComments_ = new java.util.ArrayList<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment>(calendarComments_);
          bitField0_ |= 0x00400000;
         }
      }

      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> getCalendarCommentsList() {
        return java.util.Collections.unmodifiableList(calendarComments_);
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public int getCalendarCommentsCount() {
        return calendarComments_.size();
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComments(int index) {
        return calendarComments_.get(index);
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public Builder setCalendarComments(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarComment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarCommentsIsMutable();
        calendarComments_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public Builder setCalendarComments(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.Builder builderForValue) {
        ensureCalendarCommentsIsMutable();
        calendarComments_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public Builder addCalendarComments(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarCommentsIsMutable();
        calendarComments_.add(value);

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public Builder addCalendarComments(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarComment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarCommentsIsMutable();
        calendarComments_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public Builder addCalendarComments(
          com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.Builder builderForValue) {
        ensureCalendarCommentsIsMutable();
        calendarComments_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public Builder addCalendarComments(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.Builder builderForValue) {
        ensureCalendarCommentsIsMutable();
        calendarComments_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public Builder addAllCalendarComments(
          java.lang.Iterable<? extends com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> values) {
        ensureCalendarCommentsIsMutable();
        super.addAll(values, calendarComments_);

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public Builder clearCalendarComments() {
        calendarComments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 23;</code>
       *
       * <pre>
       *评论追加
       * </pre>
       */
      public Builder removeCalendarComments(int index) {
        ensureCalendarCommentsIsMutable();
        calendarComments_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:Calendar)
    }

    static {
      defaultInstance = new Calendar(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Calendar)
  }

  public interface FindCalendarListRetOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .Calendar calendars = 1;
    /**
     * <code>repeated .Calendar calendars = 1;</code>
     *
     * <pre>
     *日程列表
     * </pre>
     */
    java.util.List<com.vine.vinemars.net.pb.CalendarMessage.Calendar> 
        getCalendarsList();
    /**
     * <code>repeated .Calendar calendars = 1;</code>
     *
     * <pre>
     *日程列表
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendars(int index);
    /**
     * <code>repeated .Calendar calendars = 1;</code>
     *
     * <pre>
     *日程列表
     * </pre>
     */
    int getCalendarsCount();
  }
  /**
   * Protobuf type {@code FindCalendarListRet}
   */
  public static final class FindCalendarListRet extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarListRetOrBuilder {
    // Use FindCalendarListRet.newBuilder() to construct.
    private FindCalendarListRet(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarListRet(boolean noInit) {}

    private static final FindCalendarListRet defaultInstance;
    public static FindCalendarListRet getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarListRet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarListRet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                calendars_ = new java.util.ArrayList<com.vine.vinemars.net.pb.CalendarMessage.Calendar>();
                mutable_bitField0_ |= 0x00000001;
              }
              calendars_.add(input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.Calendar.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          calendars_ = java.util.Collections.unmodifiableList(calendars_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarListRet> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarListRet>() {
      public FindCalendarListRet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarListRet(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarListRet> getParserForType() {
      return PARSER;
    }

    // repeated .Calendar calendars = 1;
    public static final int CALENDARS_FIELD_NUMBER = 1;
    private java.util.List<com.vine.vinemars.net.pb.CalendarMessage.Calendar> calendars_;
    /**
     * <code>repeated .Calendar calendars = 1;</code>
     *
     * <pre>
     *日程列表
     * </pre>
     */
    public java.util.List<com.vine.vinemars.net.pb.CalendarMessage.Calendar> getCalendarsList() {
      return calendars_;
    }
    /**
     * <code>repeated .Calendar calendars = 1;</code>
     *
     * <pre>
     *日程列表
     * </pre>
     */
    public java.util.List<? extends com.vine.vinemars.net.pb.CalendarMessage.CalendarOrBuilder> 
        getCalendarsOrBuilderList() {
      return calendars_;
    }
    /**
     * <code>repeated .Calendar calendars = 1;</code>
     *
     * <pre>
     *日程列表
     * </pre>
     */
    public int getCalendarsCount() {
      return calendars_.size();
    }
    /**
     * <code>repeated .Calendar calendars = 1;</code>
     *
     * <pre>
     *日程列表
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendars(int index) {
      return calendars_.get(index);
    }
    /**
     * <code>repeated .Calendar calendars = 1;</code>
     *
     * <pre>
     *日程列表
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarOrBuilder getCalendarsOrBuilder(
        int index) {
      return calendars_.get(index);
    }

    private void initFields() {
      calendars_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < calendars_.size(); i++) {
        output.writeMessage(1, calendars_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < calendars_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendars_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarListRet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRetOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendars_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          calendars_ = java.util.Collections.unmodifiableList(calendars_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.calendars_ = calendars_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet.getDefaultInstance()) return this;
        if (!other.calendars_.isEmpty()) {
          if (calendars_.isEmpty()) {
            calendars_ = other.calendars_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCalendarsIsMutable();
            calendars_.addAll(other.calendars_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarListRet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Calendar calendars = 1;
      private java.util.List<com.vine.vinemars.net.pb.CalendarMessage.Calendar> calendars_ =
        java.util.Collections.emptyList();
      private void ensureCalendarsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          calendars_ = new java.util.ArrayList<com.vine.vinemars.net.pb.CalendarMessage.Calendar>(calendars_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public java.util.List<com.vine.vinemars.net.pb.CalendarMessage.Calendar> getCalendarsList() {
        return java.util.Collections.unmodifiableList(calendars_);
      }
      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public int getCalendarsCount() {
        return calendars_.size();
      }
      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendars(int index) {
        return calendars_.get(index);
      }
      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public Builder setCalendars(
          int index, com.vine.vinemars.net.pb.CalendarMessage.Calendar value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarsIsMutable();
        calendars_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public Builder setCalendars(
          int index, com.vine.vinemars.net.pb.CalendarMessage.Calendar.Builder builderForValue) {
        ensureCalendarsIsMutable();
        calendars_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public Builder addCalendars(com.vine.vinemars.net.pb.CalendarMessage.Calendar value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarsIsMutable();
        calendars_.add(value);

        return this;
      }
      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public Builder addCalendars(
          int index, com.vine.vinemars.net.pb.CalendarMessage.Calendar value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarsIsMutable();
        calendars_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public Builder addCalendars(
          com.vine.vinemars.net.pb.CalendarMessage.Calendar.Builder builderForValue) {
        ensureCalendarsIsMutable();
        calendars_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public Builder addCalendars(
          int index, com.vine.vinemars.net.pb.CalendarMessage.Calendar.Builder builderForValue) {
        ensureCalendarsIsMutable();
        calendars_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public Builder addAllCalendars(
          java.lang.Iterable<? extends com.vine.vinemars.net.pb.CalendarMessage.Calendar> values) {
        ensureCalendarsIsMutable();
        super.addAll(values, calendars_);

        return this;
      }
      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public Builder clearCalendars() {
        calendars_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .Calendar calendars = 1;</code>
       *
       * <pre>
       *日程列表
       * </pre>
       */
      public Builder removeCalendars(int index) {
        ensureCalendarsIsMutable();
        calendars_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarListRet)
    }

    static {
      defaultInstance = new FindCalendarListRet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarListRet)
  }

  public interface FindCalendarByIdOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int64 calendarId = 1;
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    boolean hasCalendarId();
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    long getCalendarId();
  }
  /**
   * Protobuf type {@code FindCalendarById}
   *
   * <pre>
   *----------------------查看单个日程详情----------------------
   * </pre>
   */
  public static final class FindCalendarById extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarByIdOrBuilder {
    // Use FindCalendarById.newBuilder() to construct.
    private FindCalendarById(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarById(boolean noInit) {}

    private static final FindCalendarById defaultInstance;
    public static FindCalendarById getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarById getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarById(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarById> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarById>() {
      public FindCalendarById parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarById(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarById> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 calendarId = 1;
    public static final int CALENDARID_FIELD_NUMBER = 1;
    private long calendarId_;
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    public boolean hasCalendarId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    public long getCalendarId() {
      return calendarId_;
    }

    private void initFields() {
      calendarId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarById}
     *
     * <pre>
     *----------------------查看单个日程详情----------------------
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarId_ = calendarId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById.getDefaultInstance()) return this;
        if (other.hasCalendarId()) {
          setCalendarId(other.getCalendarId());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarById) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 calendarId = 1;
      private long calendarId_ ;
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public boolean hasCalendarId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public long getCalendarId() {
        return calendarId_;
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public Builder setCalendarId(long value) {
        bitField0_ |= 0x00000001;
        calendarId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public Builder clearCalendarId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarId_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarById)
    }

    static {
      defaultInstance = new FindCalendarById(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarById)
  }

  public interface FindCalendarByIdRetOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional .Calendar Calendar = 1;
    /**
     * <code>optional .Calendar Calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    boolean hasCalendar();
    /**
     * <code>optional .Calendar Calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendar();
  }
  /**
   * Protobuf type {@code FindCalendarByIdRet}
   */
  public static final class FindCalendarByIdRet extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarByIdRetOrBuilder {
    // Use FindCalendarByIdRet.newBuilder() to construct.
    private FindCalendarByIdRet(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarByIdRet(boolean noInit) {}

    private static final FindCalendarByIdRet defaultInstance;
    public static FindCalendarByIdRet getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarByIdRet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarByIdRet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.vine.vinemars.net.pb.CalendarMessage.Calendar.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = calendar_.toBuilder();
              }
              calendar_ = input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.Calendar.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calendar_);
                calendar_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarByIdRet> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarByIdRet>() {
      public FindCalendarByIdRet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarByIdRet(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarByIdRet> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .Calendar Calendar = 1;
    public static final int CALENDAR_FIELD_NUMBER = 1;
    private com.vine.vinemars.net.pb.CalendarMessage.Calendar calendar_;
    /**
     * <code>optional .Calendar Calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    public boolean hasCalendar() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Calendar Calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendar() {
      return calendar_;
    }

    private void initFields() {
      calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendar_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendar_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarByIdRet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRetOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendar_ = calendar_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet.getDefaultInstance()) return this;
        if (other.hasCalendar()) {
          mergeCalendar(other.getCalendar());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarByIdRet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .Calendar Calendar = 1;
      private com.vine.vinemars.net.pb.CalendarMessage.Calendar calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();
      /**
       * <code>optional .Calendar Calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public boolean hasCalendar() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Calendar Calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendar() {
        return calendar_;
      }
      /**
       * <code>optional .Calendar Calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder setCalendar(com.vine.vinemars.net.pb.CalendarMessage.Calendar value) {
        if (value == null) {
          throw new NullPointerException();
        }
        calendar_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Calendar Calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder setCalendar(
          com.vine.vinemars.net.pb.CalendarMessage.Calendar.Builder builderForValue) {
        calendar_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Calendar Calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder mergeCalendar(com.vine.vinemars.net.pb.CalendarMessage.Calendar value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            calendar_ != com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance()) {
          calendar_ =
            com.vine.vinemars.net.pb.CalendarMessage.Calendar.newBuilder(calendar_).mergeFrom(value).buildPartial();
        } else {
          calendar_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Calendar Calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder clearCalendar() {
        calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarByIdRet)
    }

    static {
      defaultInstance = new FindCalendarByIdRet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarByIdRet)
  }

  public interface AddCalendarOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional .Calendar calendar = 1;
    /**
     * <code>optional .Calendar calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    boolean hasCalendar();
    /**
     * <code>optional .Calendar calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendar();
  }
  /**
   * Protobuf type {@code AddCalendar}
   */
  public static final class AddCalendar extends
      com.google.protobuf.GeneratedMessageLite
      implements AddCalendarOrBuilder {
    // Use AddCalendar.newBuilder() to construct.
    private AddCalendar(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private AddCalendar(boolean noInit) {}

    private static final AddCalendar defaultInstance;
    public static AddCalendar getDefaultInstance() {
      return defaultInstance;
    }

    public AddCalendar getDefaultInstanceForType() {
      return defaultInstance;
    }

    private AddCalendar(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.vine.vinemars.net.pb.CalendarMessage.Calendar.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = calendar_.toBuilder();
              }
              calendar_ = input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.Calendar.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calendar_);
                calendar_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<AddCalendar> PARSER =
        new com.google.protobuf.AbstractParser<AddCalendar>() {
      public AddCalendar parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddCalendar(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddCalendar> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .Calendar calendar = 1;
    public static final int CALENDAR_FIELD_NUMBER = 1;
    private com.vine.vinemars.net.pb.CalendarMessage.Calendar calendar_;
    /**
     * <code>optional .Calendar calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    public boolean hasCalendar() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Calendar calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendar() {
      return calendar_;
    }

    private void initFields() {
      calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendar_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendar_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.AddCalendar prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code AddCalendar}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.AddCalendar, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.AddCalendarOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.AddCalendar.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.AddCalendar getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.AddCalendar.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.AddCalendar build() {
        com.vine.vinemars.net.pb.CalendarMessage.AddCalendar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.AddCalendar buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.AddCalendar result = new com.vine.vinemars.net.pb.CalendarMessage.AddCalendar(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendar_ = calendar_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.AddCalendar other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.AddCalendar.getDefaultInstance()) return this;
        if (other.hasCalendar()) {
          mergeCalendar(other.getCalendar());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.AddCalendar parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.AddCalendar) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .Calendar calendar = 1;
      private com.vine.vinemars.net.pb.CalendarMessage.Calendar calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public boolean hasCalendar() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendar() {
        return calendar_;
      }
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder setCalendar(com.vine.vinemars.net.pb.CalendarMessage.Calendar value) {
        if (value == null) {
          throw new NullPointerException();
        }
        calendar_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder setCalendar(
          com.vine.vinemars.net.pb.CalendarMessage.Calendar.Builder builderForValue) {
        calendar_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder mergeCalendar(com.vine.vinemars.net.pb.CalendarMessage.Calendar value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            calendar_ != com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance()) {
          calendar_ =
            com.vine.vinemars.net.pb.CalendarMessage.Calendar.newBuilder(calendar_).mergeFrom(value).buildPartial();
        } else {
          calendar_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder clearCalendar() {
        calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AddCalendar)
    }

    static {
      defaultInstance = new AddCalendar(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AddCalendar)
  }

  public interface EditCalendarByIdOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional .Calendar calendar = 1;
    /**
     * <code>optional .Calendar calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    boolean hasCalendar();
    /**
     * <code>optional .Calendar calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendar();
  }
  /**
   * Protobuf type {@code EditCalendarById}
   */
  public static final class EditCalendarById extends
      com.google.protobuf.GeneratedMessageLite
      implements EditCalendarByIdOrBuilder {
    // Use EditCalendarById.newBuilder() to construct.
    private EditCalendarById(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private EditCalendarById(boolean noInit) {}

    private static final EditCalendarById defaultInstance;
    public static EditCalendarById getDefaultInstance() {
      return defaultInstance;
    }

    public EditCalendarById getDefaultInstanceForType() {
      return defaultInstance;
    }

    private EditCalendarById(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.vine.vinemars.net.pb.CalendarMessage.Calendar.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = calendar_.toBuilder();
              }
              calendar_ = input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.Calendar.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calendar_);
                calendar_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<EditCalendarById> PARSER =
        new com.google.protobuf.AbstractParser<EditCalendarById>() {
      public EditCalendarById parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EditCalendarById(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EditCalendarById> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .Calendar calendar = 1;
    public static final int CALENDAR_FIELD_NUMBER = 1;
    private com.vine.vinemars.net.pb.CalendarMessage.Calendar calendar_;
    /**
     * <code>optional .Calendar calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    public boolean hasCalendar() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Calendar calendar = 1;</code>
     *
     * <pre>
     *日程详情
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendar() {
      return calendar_;
    }

    private void initFields() {
      calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendar_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendar_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code EditCalendarById}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.EditCalendarByIdOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById build() {
        com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById result = new com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendar_ = calendar_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById.getDefaultInstance()) return this;
        if (other.hasCalendar()) {
          mergeCalendar(other.getCalendar());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.EditCalendarById) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .Calendar calendar = 1;
      private com.vine.vinemars.net.pb.CalendarMessage.Calendar calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public boolean hasCalendar() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.Calendar getCalendar() {
        return calendar_;
      }
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder setCalendar(com.vine.vinemars.net.pb.CalendarMessage.Calendar value) {
        if (value == null) {
          throw new NullPointerException();
        }
        calendar_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder setCalendar(
          com.vine.vinemars.net.pb.CalendarMessage.Calendar.Builder builderForValue) {
        calendar_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder mergeCalendar(com.vine.vinemars.net.pb.CalendarMessage.Calendar value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            calendar_ != com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance()) {
          calendar_ =
            com.vine.vinemars.net.pb.CalendarMessage.Calendar.newBuilder(calendar_).mergeFrom(value).buildPartial();
        } else {
          calendar_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Calendar calendar = 1;</code>
       *
       * <pre>
       *日程详情
       * </pre>
       */
      public Builder clearCalendar() {
        calendar_ = com.vine.vinemars.net.pb.CalendarMessage.Calendar.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EditCalendarById)
    }

    static {
      defaultInstance = new EditCalendarById(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EditCalendarById)
  }

  public interface DeleteCalendarByIdOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int64 calendarId = 1;
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    boolean hasCalendarId();
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    long getCalendarId();
  }
  /**
   * Protobuf type {@code DeleteCalendarById}
   */
  public static final class DeleteCalendarById extends
      com.google.protobuf.GeneratedMessageLite
      implements DeleteCalendarByIdOrBuilder {
    // Use DeleteCalendarById.newBuilder() to construct.
    private DeleteCalendarById(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private DeleteCalendarById(boolean noInit) {}

    private static final DeleteCalendarById defaultInstance;
    public static DeleteCalendarById getDefaultInstance() {
      return defaultInstance;
    }

    public DeleteCalendarById getDefaultInstanceForType() {
      return defaultInstance;
    }

    private DeleteCalendarById(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<DeleteCalendarById> PARSER =
        new com.google.protobuf.AbstractParser<DeleteCalendarById>() {
      public DeleteCalendarById parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteCalendarById(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteCalendarById> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 calendarId = 1;
    public static final int CALENDARID_FIELD_NUMBER = 1;
    private long calendarId_;
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    public boolean hasCalendarId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    public long getCalendarId() {
      return calendarId_;
    }

    private void initFields() {
      calendarId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code DeleteCalendarById}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarByIdOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById build() {
        com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById result = new com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarId_ = calendarId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById.getDefaultInstance()) return this;
        if (other.hasCalendarId()) {
          setCalendarId(other.getCalendarId());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarById) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 calendarId = 1;
      private long calendarId_ ;
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public boolean hasCalendarId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public long getCalendarId() {
        return calendarId_;
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public Builder setCalendarId(long value) {
        bitField0_ |= 0x00000001;
        calendarId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public Builder clearCalendarId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarId_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DeleteCalendarById)
    }

    static {
      defaultInstance = new DeleteCalendarById(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DeleteCalendarById)
  }

  public interface FindCalendarCategoryListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional string startTime = 1;
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    java.lang.String getStartTime();
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    com.google.protobuf.ByteString
        getStartTimeBytes();

    // optional string endTime = 2;
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    java.lang.String getEndTime();
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    com.google.protobuf.ByteString
        getEndTimeBytes();

    // optional string keyword = 3;
    /**
     * <code>optional string keyword = 3;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    boolean hasKeyword();
    /**
     * <code>optional string keyword = 3;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    java.lang.String getKeyword();
    /**
     * <code>optional string keyword = 3;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeywordBytes();
  }
  /**
   * Protobuf type {@code FindCalendarCategoryList}
   *
   * <pre>
   *客户端日程列表请求消息包
   * </pre>
   */
  public static final class FindCalendarCategoryList extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarCategoryListOrBuilder {
    // Use FindCalendarCategoryList.newBuilder() to construct.
    private FindCalendarCategoryList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarCategoryList(boolean noInit) {}

    private static final FindCalendarCategoryList defaultInstance;
    public static FindCalendarCategoryList getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarCategoryList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarCategoryList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              startTime_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              endTime_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              keyword_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarCategoryList> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarCategoryList>() {
      public FindCalendarCategoryList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarCategoryList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarCategoryList> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string startTime = 1;
    public static final int STARTTIME_FIELD_NUMBER = 1;
    private java.lang.Object startTime_;
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public java.lang.String getStartTime() {
      java.lang.Object ref = startTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          startTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string startTime = 1;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStartTimeBytes() {
      java.lang.Object ref = startTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        startTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string endTime = 2;
    public static final int ENDTIME_FIELD_NUMBER = 2;
    private java.lang.Object endTime_;
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public java.lang.String getEndTime() {
      java.lang.Object ref = endTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          endTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string endTime = 2;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEndTimeBytes() {
      java.lang.Object ref = endTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        endTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string keyword = 3;
    public static final int KEYWORD_FIELD_NUMBER = 3;
    private java.lang.Object keyword_;
    /**
     * <code>optional string keyword = 3;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    public boolean hasKeyword() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string keyword = 3;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    public java.lang.String getKeyword() {
      java.lang.Object ref = keyword_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          keyword_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string keyword = 3;</code>
     *
     * <pre>
     *搜索关键字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeywordBytes() {
      java.lang.Object ref = keyword_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      startTime_ = "";
      endTime_ = "";
      keyword_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEndTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getKeywordBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEndTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getKeywordBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarCategoryList}
     *
     * <pre>
     *客户端日程列表请求消息包
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        endTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        keyword_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.keyword_ = keyword_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList.getDefaultInstance()) return this;
        if (other.hasStartTime()) {
          bitField0_ |= 0x00000001;
          startTime_ = other.startTime_;
          
        }
        if (other.hasEndTime()) {
          bitField0_ |= 0x00000002;
          endTime_ = other.endTime_;
          
        }
        if (other.hasKeyword()) {
          bitField0_ |= 0x00000004;
          keyword_ = other.keyword_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string startTime = 1;
      private java.lang.Object startTime_ = "";
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public java.lang.String getStartTime() {
        java.lang.Object ref = startTime_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          startTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStartTimeBytes() {
        java.lang.Object ref = startTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          startTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder setStartTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        startTime_ = value;
        
        return this;
      }
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = getDefaultInstance().getStartTime();
        
        return this;
      }
      /**
       * <code>optional string startTime = 1;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder setStartTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        startTime_ = value;
        
        return this;
      }

      // optional string endTime = 2;
      private java.lang.Object endTime_ = "";
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public java.lang.String getEndTime() {
        java.lang.Object ref = endTime_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          endTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEndTimeBytes() {
        java.lang.Object ref = endTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          endTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder setEndTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        endTime_ = value;
        
        return this;
      }
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = getDefaultInstance().getEndTime();
        
        return this;
      }
      /**
       * <code>optional string endTime = 2;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder setEndTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        endTime_ = value;
        
        return this;
      }

      // optional string keyword = 3;
      private java.lang.Object keyword_ = "";
      /**
       * <code>optional string keyword = 3;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public boolean hasKeyword() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string keyword = 3;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public java.lang.String getKeyword() {
        java.lang.Object ref = keyword_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          keyword_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string keyword = 3;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeywordBytes() {
        java.lang.Object ref = keyword_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyword_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string keyword = 3;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public Builder setKeyword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        keyword_ = value;
        
        return this;
      }
      /**
       * <code>optional string keyword = 3;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public Builder clearKeyword() {
        bitField0_ = (bitField0_ & ~0x00000004);
        keyword_ = getDefaultInstance().getKeyword();
        
        return this;
      }
      /**
       * <code>optional string keyword = 3;</code>
       *
       * <pre>
       *搜索关键字
       * </pre>
       */
      public Builder setKeywordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        keyword_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarCategoryList)
    }

    static {
      defaultInstance = new FindCalendarCategoryList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarCategoryList)
  }

  public interface FindCalendarCategoryListRetOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .CalendarCategory calendarCategorys = 1;
    /**
     * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
     *
     * <pre>
     *日程分类列表
     * </pre>
     */
    java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory> 
        getCalendarCategorysList();
    /**
     * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
     *
     * <pre>
     *日程分类列表
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategorys(int index);
    /**
     * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
     *
     * <pre>
     *日程分类列表
     * </pre>
     */
    int getCalendarCategorysCount();
  }
  /**
   * Protobuf type {@code FindCalendarCategoryListRet}
   */
  public static final class FindCalendarCategoryListRet extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarCategoryListRetOrBuilder {
    // Use FindCalendarCategoryListRet.newBuilder() to construct.
    private FindCalendarCategoryListRet(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarCategoryListRet(boolean noInit) {}

    private static final FindCalendarCategoryListRet defaultInstance;
    public static FindCalendarCategoryListRet getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarCategoryListRet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarCategoryListRet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                calendarCategorys_ = new java.util.ArrayList<com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory>();
                mutable_bitField0_ |= 0x00000001;
              }
              calendarCategorys_.add(input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          calendarCategorys_ = java.util.Collections.unmodifiableList(calendarCategorys_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarCategoryListRet> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarCategoryListRet>() {
      public FindCalendarCategoryListRet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarCategoryListRet(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarCategoryListRet> getParserForType() {
      return PARSER;
    }

    // repeated .CalendarCategory calendarCategorys = 1;
    public static final int CALENDARCATEGORYS_FIELD_NUMBER = 1;
    private java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory> calendarCategorys_;
    /**
     * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
     *
     * <pre>
     *日程分类列表
     * </pre>
     */
    public java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory> getCalendarCategorysList() {
      return calendarCategorys_;
    }
    /**
     * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
     *
     * <pre>
     *日程分类列表
     * </pre>
     */
    public java.util.List<? extends com.vine.vinemars.net.pb.CalendarMessage.CalendarCategoryOrBuilder> 
        getCalendarCategorysOrBuilderList() {
      return calendarCategorys_;
    }
    /**
     * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
     *
     * <pre>
     *日程分类列表
     * </pre>
     */
    public int getCalendarCategorysCount() {
      return calendarCategorys_.size();
    }
    /**
     * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
     *
     * <pre>
     *日程分类列表
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategorys(int index) {
      return calendarCategorys_.get(index);
    }
    /**
     * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
     *
     * <pre>
     *日程分类列表
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategoryOrBuilder getCalendarCategorysOrBuilder(
        int index) {
      return calendarCategorys_.get(index);
    }

    private void initFields() {
      calendarCategorys_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < calendarCategorys_.size(); i++) {
        output.writeMessage(1, calendarCategorys_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < calendarCategorys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarCategorys_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarCategoryListRet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRetOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarCategorys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          calendarCategorys_ = java.util.Collections.unmodifiableList(calendarCategorys_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.calendarCategorys_ = calendarCategorys_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet.getDefaultInstance()) return this;
        if (!other.calendarCategorys_.isEmpty()) {
          if (calendarCategorys_.isEmpty()) {
            calendarCategorys_ = other.calendarCategorys_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCalendarCategorysIsMutable();
            calendarCategorys_.addAll(other.calendarCategorys_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryListRet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .CalendarCategory calendarCategorys = 1;
      private java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory> calendarCategorys_ =
        java.util.Collections.emptyList();
      private void ensureCalendarCategorysIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          calendarCategorys_ = new java.util.ArrayList<com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory>(calendarCategorys_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory> getCalendarCategorysList() {
        return java.util.Collections.unmodifiableList(calendarCategorys_);
      }
      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public int getCalendarCategorysCount() {
        return calendarCategorys_.size();
      }
      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategorys(int index) {
        return calendarCategorys_.get(index);
      }
      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public Builder setCalendarCategorys(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarCategorysIsMutable();
        calendarCategorys_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public Builder setCalendarCategorys(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.Builder builderForValue) {
        ensureCalendarCategorysIsMutable();
        calendarCategorys_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public Builder addCalendarCategorys(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarCategorysIsMutable();
        calendarCategorys_.add(value);

        return this;
      }
      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public Builder addCalendarCategorys(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarCategorysIsMutable();
        calendarCategorys_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public Builder addCalendarCategorys(
          com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.Builder builderForValue) {
        ensureCalendarCategorysIsMutable();
        calendarCategorys_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public Builder addCalendarCategorys(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.Builder builderForValue) {
        ensureCalendarCategorysIsMutable();
        calendarCategorys_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public Builder addAllCalendarCategorys(
          java.lang.Iterable<? extends com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory> values) {
        ensureCalendarCategorysIsMutable();
        super.addAll(values, calendarCategorys_);

        return this;
      }
      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public Builder clearCalendarCategorys() {
        calendarCategorys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .CalendarCategory calendarCategorys = 1;</code>
       *
       * <pre>
       *日程分类列表
       * </pre>
       */
      public Builder removeCalendarCategorys(int index) {
        ensureCalendarCategorysIsMutable();
        calendarCategorys_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarCategoryListRet)
    }

    static {
      defaultInstance = new FindCalendarCategoryListRet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarCategoryListRet)
  }

  public interface CalendarCategoryOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int64 id = 1;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    long getId();

    // optional string userId = 2;
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // optional string name = 3;
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     *日程分类名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     *日程分类名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     *日程分类名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 showOrder = 4;
    /**
     * <code>optional int32 showOrder = 4;</code>
     *
     * <pre>
     *显示顺序
     * </pre>
     */
    boolean hasShowOrder();
    /**
     * <code>optional int32 showOrder = 4;</code>
     *
     * <pre>
     *显示顺序
     * </pre>
     */
    int getShowOrder();

    // optional int32 enabled = 5;
    /**
     * <code>optional int32 enabled = 5;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    boolean hasEnabled();
    /**
     * <code>optional int32 enabled = 5;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    int getEnabled();

    // optional int64 createTime = 6;
    /**
     * <code>optional int64 createTime = 6;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>optional int64 createTime = 6;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    long getCreateTime();

    // optional string creator = 7;
    /**
     * <code>optional string creator = 7;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    boolean hasCreator();
    /**
     * <code>optional string creator = 7;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    java.lang.String getCreator();
    /**
     * <code>optional string creator = 7;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreatorBytes();

    // optional int64 updateTime = 8;
    /**
     * <code>optional int64 updateTime = 8;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    boolean hasUpdateTime();
    /**
     * <code>optional int64 updateTime = 8;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    long getUpdateTime();

    // optional string updater = 9;
    /**
     * <code>optional string updater = 9;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    boolean hasUpdater();
    /**
     * <code>optional string updater = 9;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    java.lang.String getUpdater();
    /**
     * <code>optional string updater = 9;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    com.google.protobuf.ByteString
        getUpdaterBytes();
  }
  /**
   * Protobuf type {@code CalendarCategory}
   */
  public static final class CalendarCategory extends
      com.google.protobuf.GeneratedMessageLite
      implements CalendarCategoryOrBuilder {
    // Use CalendarCategory.newBuilder() to construct.
    private CalendarCategory(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CalendarCategory(boolean noInit) {}

    private static final CalendarCategory defaultInstance;
    public static CalendarCategory getDefaultInstance() {
      return defaultInstance;
    }

    public CalendarCategory getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CalendarCategory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userId_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              showOrder_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              enabled_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              createTime_ = input.readInt64();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              creator_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              updateTime_ = input.readInt64();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              updater_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CalendarCategory> PARSER =
        new com.google.protobuf.AbstractParser<CalendarCategory>() {
      public CalendarCategory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CalendarCategory(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CalendarCategory> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     *自增Id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // optional string userId = 2;
    public static final int USERID_FIELD_NUMBER = 2;
    private java.lang.Object userId_;
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userId = 2;</code>
     *
     * <pre>
     *用户Id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     *日程分类名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     *日程分类名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     *
     * <pre>
     *日程分类名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 showOrder = 4;
    public static final int SHOWORDER_FIELD_NUMBER = 4;
    private int showOrder_;
    /**
     * <code>optional int32 showOrder = 4;</code>
     *
     * <pre>
     *显示顺序
     * </pre>
     */
    public boolean hasShowOrder() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 showOrder = 4;</code>
     *
     * <pre>
     *显示顺序
     * </pre>
     */
    public int getShowOrder() {
      return showOrder_;
    }

    // optional int32 enabled = 5;
    public static final int ENABLED_FIELD_NUMBER = 5;
    private int enabled_;
    /**
     * <code>optional int32 enabled = 5;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 enabled = 5;</code>
     *
     * <pre>
     *是否可用
     * </pre>
     */
    public int getEnabled() {
      return enabled_;
    }

    // optional int64 createTime = 6;
    public static final int CREATETIME_FIELD_NUMBER = 6;
    private long createTime_;
    /**
     * <code>optional int64 createTime = 6;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 createTime = 6;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public long getCreateTime() {
      return createTime_;
    }

    // optional string creator = 7;
    public static final int CREATOR_FIELD_NUMBER = 7;
    private java.lang.Object creator_;
    /**
     * <code>optional string creator = 7;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public boolean hasCreator() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string creator = 7;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public java.lang.String getCreator() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          creator_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string creator = 7;</code>
     *
     * <pre>
     *创建者
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreatorBytes() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        creator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 updateTime = 8;
    public static final int UPDATETIME_FIELD_NUMBER = 8;
    private long updateTime_;
    /**
     * <code>optional int64 updateTime = 8;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    public boolean hasUpdateTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 updateTime = 8;</code>
     *
     * <pre>
     *更新时间
     * </pre>
     */
    public long getUpdateTime() {
      return updateTime_;
    }

    // optional string updater = 9;
    public static final int UPDATER_FIELD_NUMBER = 9;
    private java.lang.Object updater_;
    /**
     * <code>optional string updater = 9;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    public boolean hasUpdater() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string updater = 9;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    public java.lang.String getUpdater() {
      java.lang.Object ref = updater_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          updater_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string updater = 9;</code>
     *
     * <pre>
     *更新者
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUpdaterBytes() {
      java.lang.Object ref = updater_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        updater_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      id_ = 0L;
      userId_ = "";
      name_ = "";
      showOrder_ = 0;
      enabled_ = 0;
      createTime_ = 0L;
      creator_ = "";
      updateTime_ = 0L;
      updater_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, showOrder_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, enabled_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, createTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getCreatorBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, updateTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getUpdaterBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, showOrder_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, enabled_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, createTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getCreatorBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, updateTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getUpdaterBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code CalendarCategory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.CalendarCategoryOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        showOrder_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        enabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        creator_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        updateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        updater_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory build() {
        com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory result = new com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.showOrder_ = showOrder_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.enabled_ = enabled_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.creator_ = creator_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.updateTime_ = updateTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.updater_ = updater_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUserId()) {
          bitField0_ |= 0x00000002;
          userId_ = other.userId_;
          
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          
        }
        if (other.hasShowOrder()) {
          setShowOrder(other.getShowOrder());
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasCreator()) {
          bitField0_ |= 0x00000040;
          creator_ = other.creator_;
          
        }
        if (other.hasUpdateTime()) {
          setUpdateTime(other.getUpdateTime());
        }
        if (other.hasUpdater()) {
          bitField0_ |= 0x00000100;
          updater_ = other.updater_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 id = 1;
      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       *自增Id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        
        return this;
      }

      // optional string userId = 2;
      private java.lang.Object userId_ = "";
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = getDefaultInstance().getUserId();
        
        return this;
      }
      /**
       * <code>optional string userId = 2;</code>
       *
       * <pre>
       *用户Id
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }

      // optional string name = 3;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       *日程分类名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       *日程分类名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       *日程分类名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       *日程分类名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       *日程分类名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       *
       * <pre>
       *日程分类名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        
        return this;
      }

      // optional int32 showOrder = 4;
      private int showOrder_ ;
      /**
       * <code>optional int32 showOrder = 4;</code>
       *
       * <pre>
       *显示顺序
       * </pre>
       */
      public boolean hasShowOrder() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 showOrder = 4;</code>
       *
       * <pre>
       *显示顺序
       * </pre>
       */
      public int getShowOrder() {
        return showOrder_;
      }
      /**
       * <code>optional int32 showOrder = 4;</code>
       *
       * <pre>
       *显示顺序
       * </pre>
       */
      public Builder setShowOrder(int value) {
        bitField0_ |= 0x00000008;
        showOrder_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 showOrder = 4;</code>
       *
       * <pre>
       *显示顺序
       * </pre>
       */
      public Builder clearShowOrder() {
        bitField0_ = (bitField0_ & ~0x00000008);
        showOrder_ = 0;
        
        return this;
      }

      // optional int32 enabled = 5;
      private int enabled_ ;
      /**
       * <code>optional int32 enabled = 5;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 enabled = 5;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public int getEnabled() {
        return enabled_;
      }
      /**
       * <code>optional int32 enabled = 5;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public Builder setEnabled(int value) {
        bitField0_ |= 0x00000010;
        enabled_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 enabled = 5;</code>
       *
       * <pre>
       *是否可用
       * </pre>
       */
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000010);
        enabled_ = 0;
        
        return this;
      }

      // optional int64 createTime = 6;
      private long createTime_ ;
      /**
       * <code>optional int64 createTime = 6;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 createTime = 6;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>optional int64 createTime = 6;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00000020;
        createTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 createTime = 6;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        createTime_ = 0L;
        
        return this;
      }

      // optional string creator = 7;
      private java.lang.Object creator_ = "";
      /**
       * <code>optional string creator = 7;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public boolean hasCreator() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string creator = 7;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public java.lang.String getCreator() {
        java.lang.Object ref = creator_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          creator_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string creator = 7;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreatorBytes() {
        java.lang.Object ref = creator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          creator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string creator = 7;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder setCreator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        creator_ = value;
        
        return this;
      }
      /**
       * <code>optional string creator = 7;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder clearCreator() {
        bitField0_ = (bitField0_ & ~0x00000040);
        creator_ = getDefaultInstance().getCreator();
        
        return this;
      }
      /**
       * <code>optional string creator = 7;</code>
       *
       * <pre>
       *创建者
       * </pre>
       */
      public Builder setCreatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        creator_ = value;
        
        return this;
      }

      // optional int64 updateTime = 8;
      private long updateTime_ ;
      /**
       * <code>optional int64 updateTime = 8;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public boolean hasUpdateTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 updateTime = 8;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public long getUpdateTime() {
        return updateTime_;
      }
      /**
       * <code>optional int64 updateTime = 8;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public Builder setUpdateTime(long value) {
        bitField0_ |= 0x00000080;
        updateTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 updateTime = 8;</code>
       *
       * <pre>
       *更新时间
       * </pre>
       */
      public Builder clearUpdateTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        updateTime_ = 0L;
        
        return this;
      }

      // optional string updater = 9;
      private java.lang.Object updater_ = "";
      /**
       * <code>optional string updater = 9;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public boolean hasUpdater() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string updater = 9;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public java.lang.String getUpdater() {
        java.lang.Object ref = updater_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          updater_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string updater = 9;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUpdaterBytes() {
        java.lang.Object ref = updater_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          updater_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string updater = 9;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public Builder setUpdater(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        updater_ = value;
        
        return this;
      }
      /**
       * <code>optional string updater = 9;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public Builder clearUpdater() {
        bitField0_ = (bitField0_ & ~0x00000100);
        updater_ = getDefaultInstance().getUpdater();
        
        return this;
      }
      /**
       * <code>optional string updater = 9;</code>
       *
       * <pre>
       *更新者
       * </pre>
       */
      public Builder setUpdaterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        updater_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CalendarCategory)
    }

    static {
      defaultInstance = new CalendarCategory(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CalendarCategory)
  }

  public interface FindCalendarCategoryByIdOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int64 calendarCategoryId = 1;
    /**
     * <code>optional int64 calendarCategoryId = 1;</code>
     *
     * <pre>
     *日程分类ID
     * </pre>
     */
    boolean hasCalendarCategoryId();
    /**
     * <code>optional int64 calendarCategoryId = 1;</code>
     *
     * <pre>
     *日程分类ID
     * </pre>
     */
    long getCalendarCategoryId();
  }
  /**
   * Protobuf type {@code FindCalendarCategoryById}
   *
   * <pre>
   *----------------------查看单个日程分类详情（应该不用）----------------------
   * </pre>
   */
  public static final class FindCalendarCategoryById extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarCategoryByIdOrBuilder {
    // Use FindCalendarCategoryById.newBuilder() to construct.
    private FindCalendarCategoryById(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarCategoryById(boolean noInit) {}

    private static final FindCalendarCategoryById defaultInstance;
    public static FindCalendarCategoryById getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarCategoryById getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarCategoryById(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarCategoryId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarCategoryById> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarCategoryById>() {
      public FindCalendarCategoryById parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarCategoryById(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarCategoryById> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 calendarCategoryId = 1;
    public static final int CALENDARCATEGORYID_FIELD_NUMBER = 1;
    private long calendarCategoryId_;
    /**
     * <code>optional int64 calendarCategoryId = 1;</code>
     *
     * <pre>
     *日程分类ID
     * </pre>
     */
    public boolean hasCalendarCategoryId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 calendarCategoryId = 1;</code>
     *
     * <pre>
     *日程分类ID
     * </pre>
     */
    public long getCalendarCategoryId() {
      return calendarCategoryId_;
    }

    private void initFields() {
      calendarCategoryId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarCategoryId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarCategoryId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarCategoryById}
     *
     * <pre>
     *----------------------查看单个日程分类详情（应该不用）----------------------
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarCategoryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarCategoryId_ = calendarCategoryId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById.getDefaultInstance()) return this;
        if (other.hasCalendarCategoryId()) {
          setCalendarCategoryId(other.getCalendarCategoryId());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryById) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 calendarCategoryId = 1;
      private long calendarCategoryId_ ;
      /**
       * <code>optional int64 calendarCategoryId = 1;</code>
       *
       * <pre>
       *日程分类ID
       * </pre>
       */
      public boolean hasCalendarCategoryId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 calendarCategoryId = 1;</code>
       *
       * <pre>
       *日程分类ID
       * </pre>
       */
      public long getCalendarCategoryId() {
        return calendarCategoryId_;
      }
      /**
       * <code>optional int64 calendarCategoryId = 1;</code>
       *
       * <pre>
       *日程分类ID
       * </pre>
       */
      public Builder setCalendarCategoryId(long value) {
        bitField0_ |= 0x00000001;
        calendarCategoryId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calendarCategoryId = 1;</code>
       *
       * <pre>
       *日程分类ID
       * </pre>
       */
      public Builder clearCalendarCategoryId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarCategoryId_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarCategoryById)
    }

    static {
      defaultInstance = new FindCalendarCategoryById(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarCategoryById)
  }

  public interface FindCalendarCategoryByIdRetOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional .CalendarCategory calendarCategory = 1;
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    boolean hasCalendarCategory();
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategory();
  }
  /**
   * Protobuf type {@code FindCalendarCategoryByIdRet}
   */
  public static final class FindCalendarCategoryByIdRet extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarCategoryByIdRetOrBuilder {
    // Use FindCalendarCategoryByIdRet.newBuilder() to construct.
    private FindCalendarCategoryByIdRet(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarCategoryByIdRet(boolean noInit) {}

    private static final FindCalendarCategoryByIdRet defaultInstance;
    public static FindCalendarCategoryByIdRet getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarCategoryByIdRet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarCategoryByIdRet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = calendarCategory_.toBuilder();
              }
              calendarCategory_ = input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calendarCategory_);
                calendarCategory_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarCategoryByIdRet> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarCategoryByIdRet>() {
      public FindCalendarCategoryByIdRet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarCategoryByIdRet(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarCategoryByIdRet> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CalendarCategory calendarCategory = 1;
    public static final int CALENDARCATEGORY_FIELD_NUMBER = 1;
    private com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory calendarCategory_;
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    public boolean hasCalendarCategory() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategory() {
      return calendarCategory_;
    }

    private void initFields() {
      calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendarCategory_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarCategory_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarCategoryByIdRet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRetOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarCategory_ = calendarCategory_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet.getDefaultInstance()) return this;
        if (other.hasCalendarCategory()) {
          mergeCalendarCategory(other.getCalendarCategory());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCategoryByIdRet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CalendarCategory calendarCategory = 1;
      private com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public boolean hasCalendarCategory() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategory() {
        return calendarCategory_;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder setCalendarCategory(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        calendarCategory_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder setCalendarCategory(
          com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.Builder builderForValue) {
        calendarCategory_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder mergeCalendarCategory(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            calendarCategory_ != com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance()) {
          calendarCategory_ =
            com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.newBuilder(calendarCategory_).mergeFrom(value).buildPartial();
        } else {
          calendarCategory_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder clearCalendarCategory() {
        calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarCategoryByIdRet)
    }

    static {
      defaultInstance = new FindCalendarCategoryByIdRet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarCategoryByIdRet)
  }

  public interface AddCalendarCategoryOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional .CalendarCategory calendarCategory = 1;
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    boolean hasCalendarCategory();
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategory();
  }
  /**
   * Protobuf type {@code AddCalendarCategory}
   */
  public static final class AddCalendarCategory extends
      com.google.protobuf.GeneratedMessageLite
      implements AddCalendarCategoryOrBuilder {
    // Use AddCalendarCategory.newBuilder() to construct.
    private AddCalendarCategory(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private AddCalendarCategory(boolean noInit) {}

    private static final AddCalendarCategory defaultInstance;
    public static AddCalendarCategory getDefaultInstance() {
      return defaultInstance;
    }

    public AddCalendarCategory getDefaultInstanceForType() {
      return defaultInstance;
    }

    private AddCalendarCategory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = calendarCategory_.toBuilder();
              }
              calendarCategory_ = input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calendarCategory_);
                calendarCategory_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<AddCalendarCategory> PARSER =
        new com.google.protobuf.AbstractParser<AddCalendarCategory>() {
      public AddCalendarCategory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddCalendarCategory(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddCalendarCategory> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CalendarCategory calendarCategory = 1;
    public static final int CALENDARCATEGORY_FIELD_NUMBER = 1;
    private com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory calendarCategory_;
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    public boolean hasCalendarCategory() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategory() {
      return calendarCategory_;
    }

    private void initFields() {
      calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendarCategory_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarCategory_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code AddCalendarCategory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategoryOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory build() {
        com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory result = new com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarCategory_ = calendarCategory_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory.getDefaultInstance()) return this;
        if (other.hasCalendarCategory()) {
          mergeCalendarCategory(other.getCalendarCategory());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCategory) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CalendarCategory calendarCategory = 1;
      private com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public boolean hasCalendarCategory() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategory() {
        return calendarCategory_;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder setCalendarCategory(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        calendarCategory_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder setCalendarCategory(
          com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.Builder builderForValue) {
        calendarCategory_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder mergeCalendarCategory(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            calendarCategory_ != com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance()) {
          calendarCategory_ =
            com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.newBuilder(calendarCategory_).mergeFrom(value).buildPartial();
        } else {
          calendarCategory_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder clearCalendarCategory() {
        calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AddCalendarCategory)
    }

    static {
      defaultInstance = new AddCalendarCategory(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AddCalendarCategory)
  }

  public interface EditCalendarCategoryByIdOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional .CalendarCategory calendarCategory = 1;
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    boolean hasCalendarCategory();
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategory();
  }
  /**
   * Protobuf type {@code EditCalendarCategoryById}
   */
  public static final class EditCalendarCategoryById extends
      com.google.protobuf.GeneratedMessageLite
      implements EditCalendarCategoryByIdOrBuilder {
    // Use EditCalendarCategoryById.newBuilder() to construct.
    private EditCalendarCategoryById(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private EditCalendarCategoryById(boolean noInit) {}

    private static final EditCalendarCategoryById defaultInstance;
    public static EditCalendarCategoryById getDefaultInstance() {
      return defaultInstance;
    }

    public EditCalendarCategoryById getDefaultInstanceForType() {
      return defaultInstance;
    }

    private EditCalendarCategoryById(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = calendarCategory_.toBuilder();
              }
              calendarCategory_ = input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calendarCategory_);
                calendarCategory_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<EditCalendarCategoryById> PARSER =
        new com.google.protobuf.AbstractParser<EditCalendarCategoryById>() {
      public EditCalendarCategoryById parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EditCalendarCategoryById(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EditCalendarCategoryById> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CalendarCategory calendarCategory = 1;
    public static final int CALENDARCATEGORY_FIELD_NUMBER = 1;
    private com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory calendarCategory_;
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    public boolean hasCalendarCategory() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CalendarCategory calendarCategory = 1;</code>
     *
     * <pre>
     *日程分类详情
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategory() {
      return calendarCategory_;
    }

    private void initFields() {
      calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendarCategory_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarCategory_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code EditCalendarCategoryById}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryByIdOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById build() {
        com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById result = new com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarCategory_ = calendarCategory_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById.getDefaultInstance()) return this;
        if (other.hasCalendarCategory()) {
          mergeCalendarCategory(other.getCalendarCategory());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.EditCalendarCategoryById) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CalendarCategory calendarCategory = 1;
      private com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public boolean hasCalendarCategory() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory getCalendarCategory() {
        return calendarCategory_;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder setCalendarCategory(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        calendarCategory_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder setCalendarCategory(
          com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.Builder builderForValue) {
        calendarCategory_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder mergeCalendarCategory(com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            calendarCategory_ != com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance()) {
          calendarCategory_ =
            com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.newBuilder(calendarCategory_).mergeFrom(value).buildPartial();
        } else {
          calendarCategory_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarCategory calendarCategory = 1;</code>
       *
       * <pre>
       *日程分类详情
       * </pre>
       */
      public Builder clearCalendarCategory() {
        calendarCategory_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarCategory.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EditCalendarCategoryById)
    }

    static {
      defaultInstance = new EditCalendarCategoryById(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EditCalendarCategoryById)
  }

  public interface DeleteCalendarCategoryByIdOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int64 calendarCategoryId = 1;
    /**
     * <code>optional int64 calendarCategoryId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    boolean hasCalendarCategoryId();
    /**
     * <code>optional int64 calendarCategoryId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    long getCalendarCategoryId();
  }
  /**
   * Protobuf type {@code DeleteCalendarCategoryById}
   */
  public static final class DeleteCalendarCategoryById extends
      com.google.protobuf.GeneratedMessageLite
      implements DeleteCalendarCategoryByIdOrBuilder {
    // Use DeleteCalendarCategoryById.newBuilder() to construct.
    private DeleteCalendarCategoryById(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private DeleteCalendarCategoryById(boolean noInit) {}

    private static final DeleteCalendarCategoryById defaultInstance;
    public static DeleteCalendarCategoryById getDefaultInstance() {
      return defaultInstance;
    }

    public DeleteCalendarCategoryById getDefaultInstanceForType() {
      return defaultInstance;
    }

    private DeleteCalendarCategoryById(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarCategoryId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<DeleteCalendarCategoryById> PARSER =
        new com.google.protobuf.AbstractParser<DeleteCalendarCategoryById>() {
      public DeleteCalendarCategoryById parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteCalendarCategoryById(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteCalendarCategoryById> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 calendarCategoryId = 1;
    public static final int CALENDARCATEGORYID_FIELD_NUMBER = 1;
    private long calendarCategoryId_;
    /**
     * <code>optional int64 calendarCategoryId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    public boolean hasCalendarCategoryId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 calendarCategoryId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    public long getCalendarCategoryId() {
      return calendarCategoryId_;
    }

    private void initFields() {
      calendarCategoryId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarCategoryId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarCategoryId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code DeleteCalendarCategoryById}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryByIdOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarCategoryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById build() {
        com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById result = new com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarCategoryId_ = calendarCategoryId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById.getDefaultInstance()) return this;
        if (other.hasCalendarCategoryId()) {
          setCalendarCategoryId(other.getCalendarCategoryId());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCategoryById) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 calendarCategoryId = 1;
      private long calendarCategoryId_ ;
      /**
       * <code>optional int64 calendarCategoryId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public boolean hasCalendarCategoryId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 calendarCategoryId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public long getCalendarCategoryId() {
        return calendarCategoryId_;
      }
      /**
       * <code>optional int64 calendarCategoryId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public Builder setCalendarCategoryId(long value) {
        bitField0_ |= 0x00000001;
        calendarCategoryId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calendarCategoryId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public Builder clearCalendarCategoryId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarCategoryId_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DeleteCalendarCategoryById)
    }

    static {
      defaultInstance = new DeleteCalendarCategoryById(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DeleteCalendarCategoryById)
  }

  public interface FindCalendarCommentListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int64 calendarId = 1;
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    boolean hasCalendarId();
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    long getCalendarId();
  }
  /**
   * Protobuf type {@code FindCalendarCommentList}
   *
   * <pre>
   *-----------------客户端日程评论列表请求消息包order By createTime---------
   * </pre>
   */
  public static final class FindCalendarCommentList extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarCommentListOrBuilder {
    // Use FindCalendarCommentList.newBuilder() to construct.
    private FindCalendarCommentList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarCommentList(boolean noInit) {}

    private static final FindCalendarCommentList defaultInstance;
    public static FindCalendarCommentList getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarCommentList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarCommentList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarCommentList> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarCommentList>() {
      public FindCalendarCommentList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarCommentList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarCommentList> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 calendarId = 1;
    public static final int CALENDARID_FIELD_NUMBER = 1;
    private long calendarId_;
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    public boolean hasCalendarId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程Id
     * </pre>
     */
    public long getCalendarId() {
      return calendarId_;
    }

    private void initFields() {
      calendarId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarCommentList}
     *
     * <pre>
     *-----------------客户端日程评论列表请求消息包order By createTime---------
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarId_ = calendarId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList.getDefaultInstance()) return this;
        if (other.hasCalendarId()) {
          setCalendarId(other.getCalendarId());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 calendarId = 1;
      private long calendarId_ ;
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public boolean hasCalendarId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public long getCalendarId() {
        return calendarId_;
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public Builder setCalendarId(long value) {
        bitField0_ |= 0x00000001;
        calendarId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程Id
       * </pre>
       */
      public Builder clearCalendarId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarId_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarCommentList)
    }

    static {
      defaultInstance = new FindCalendarCommentList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarCommentList)
  }

  public interface FindCalendarCommentListRetOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .CalendarComment calendarComments = 1;
    /**
     * <code>repeated .CalendarComment calendarComments = 1;</code>
     *
     * <pre>
     *日程评论列表
     * </pre>
     */
    java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> 
        getCalendarCommentsList();
    /**
     * <code>repeated .CalendarComment calendarComments = 1;</code>
     *
     * <pre>
     *日程评论列表
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComments(int index);
    /**
     * <code>repeated .CalendarComment calendarComments = 1;</code>
     *
     * <pre>
     *日程评论列表
     * </pre>
     */
    int getCalendarCommentsCount();
  }
  /**
   * Protobuf type {@code FindCalendarCommentListRet}
   */
  public static final class FindCalendarCommentListRet extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarCommentListRetOrBuilder {
    // Use FindCalendarCommentListRet.newBuilder() to construct.
    private FindCalendarCommentListRet(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarCommentListRet(boolean noInit) {}

    private static final FindCalendarCommentListRet defaultInstance;
    public static FindCalendarCommentListRet getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarCommentListRet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarCommentListRet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                calendarComments_ = new java.util.ArrayList<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment>();
                mutable_bitField0_ |= 0x00000001;
              }
              calendarComments_.add(input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          calendarComments_ = java.util.Collections.unmodifiableList(calendarComments_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarCommentListRet> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarCommentListRet>() {
      public FindCalendarCommentListRet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarCommentListRet(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarCommentListRet> getParserForType() {
      return PARSER;
    }

    // repeated .CalendarComment calendarComments = 1;
    public static final int CALENDARCOMMENTS_FIELD_NUMBER = 1;
    private java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> calendarComments_;
    /**
     * <code>repeated .CalendarComment calendarComments = 1;</code>
     *
     * <pre>
     *日程评论列表
     * </pre>
     */
    public java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> getCalendarCommentsList() {
      return calendarComments_;
    }
    /**
     * <code>repeated .CalendarComment calendarComments = 1;</code>
     *
     * <pre>
     *日程评论列表
     * </pre>
     */
    public java.util.List<? extends com.vine.vinemars.net.pb.CalendarMessage.CalendarCommentOrBuilder> 
        getCalendarCommentsOrBuilderList() {
      return calendarComments_;
    }
    /**
     * <code>repeated .CalendarComment calendarComments = 1;</code>
     *
     * <pre>
     *日程评论列表
     * </pre>
     */
    public int getCalendarCommentsCount() {
      return calendarComments_.size();
    }
    /**
     * <code>repeated .CalendarComment calendarComments = 1;</code>
     *
     * <pre>
     *日程评论列表
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComments(int index) {
      return calendarComments_.get(index);
    }
    /**
     * <code>repeated .CalendarComment calendarComments = 1;</code>
     *
     * <pre>
     *日程评论列表
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarCommentOrBuilder getCalendarCommentsOrBuilder(
        int index) {
      return calendarComments_.get(index);
    }

    private void initFields() {
      calendarComments_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < calendarComments_.size(); i++) {
        output.writeMessage(1, calendarComments_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < calendarComments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarComments_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarCommentListRet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRetOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarComments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          calendarComments_ = java.util.Collections.unmodifiableList(calendarComments_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.calendarComments_ = calendarComments_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet.getDefaultInstance()) return this;
        if (!other.calendarComments_.isEmpty()) {
          if (calendarComments_.isEmpty()) {
            calendarComments_ = other.calendarComments_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCalendarCommentsIsMutable();
            calendarComments_.addAll(other.calendarComments_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentListRet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .CalendarComment calendarComments = 1;
      private java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> calendarComments_ =
        java.util.Collections.emptyList();
      private void ensureCalendarCommentsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          calendarComments_ = new java.util.ArrayList<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment>(calendarComments_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public java.util.List<com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> getCalendarCommentsList() {
        return java.util.Collections.unmodifiableList(calendarComments_);
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public int getCalendarCommentsCount() {
        return calendarComments_.size();
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComments(int index) {
        return calendarComments_.get(index);
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public Builder setCalendarComments(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarComment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarCommentsIsMutable();
        calendarComments_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public Builder setCalendarComments(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.Builder builderForValue) {
        ensureCalendarCommentsIsMutable();
        calendarComments_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public Builder addCalendarComments(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarCommentsIsMutable();
        calendarComments_.add(value);

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public Builder addCalendarComments(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarComment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarCommentsIsMutable();
        calendarComments_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public Builder addCalendarComments(
          com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.Builder builderForValue) {
        ensureCalendarCommentsIsMutable();
        calendarComments_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public Builder addCalendarComments(
          int index, com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.Builder builderForValue) {
        ensureCalendarCommentsIsMutable();
        calendarComments_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public Builder addAllCalendarComments(
          java.lang.Iterable<? extends com.vine.vinemars.net.pb.CalendarMessage.CalendarComment> values) {
        ensureCalendarCommentsIsMutable();
        super.addAll(values, calendarComments_);

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public Builder clearCalendarComments() {
        calendarComments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .CalendarComment calendarComments = 1;</code>
       *
       * <pre>
       *日程评论列表
       * </pre>
       */
      public Builder removeCalendarComments(int index) {
        ensureCalendarCommentsIsMutable();
        calendarComments_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarCommentListRet)
    }

    static {
      defaultInstance = new FindCalendarCommentListRet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarCommentListRet)
  }

  public interface FindCalendarCommentByIdOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int64 calendarId = 1;
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    boolean hasCalendarId();
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    long getCalendarId();

    // optional int64 calendarCommentId = 2;
    /**
     * <code>optional int64 calendarCommentId = 2;</code>
     *
     * <pre>
     *日程评论ID
     * </pre>
     */
    boolean hasCalendarCommentId();
    /**
     * <code>optional int64 calendarCommentId = 2;</code>
     *
     * <pre>
     *日程评论ID
     * </pre>
     */
    long getCalendarCommentId();
  }
  /**
   * Protobuf type {@code FindCalendarCommentById}
   *
   * <pre>
   *----------------------查看单个日程评论详情----------------------
   * </pre>
   */
  public static final class FindCalendarCommentById extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarCommentByIdOrBuilder {
    // Use FindCalendarCommentById.newBuilder() to construct.
    private FindCalendarCommentById(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarCommentById(boolean noInit) {}

    private static final FindCalendarCommentById defaultInstance;
    public static FindCalendarCommentById getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarCommentById getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarCommentById(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              calendarCommentId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarCommentById> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarCommentById>() {
      public FindCalendarCommentById parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarCommentById(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarCommentById> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 calendarId = 1;
    public static final int CALENDARID_FIELD_NUMBER = 1;
    private long calendarId_;
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    public boolean hasCalendarId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    public long getCalendarId() {
      return calendarId_;
    }

    // optional int64 calendarCommentId = 2;
    public static final int CALENDARCOMMENTID_FIELD_NUMBER = 2;
    private long calendarCommentId_;
    /**
     * <code>optional int64 calendarCommentId = 2;</code>
     *
     * <pre>
     *日程评论ID
     * </pre>
     */
    public boolean hasCalendarCommentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 calendarCommentId = 2;</code>
     *
     * <pre>
     *日程评论ID
     * </pre>
     */
    public long getCalendarCommentId() {
      return calendarCommentId_;
    }

    private void initFields() {
      calendarId_ = 0L;
      calendarCommentId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, calendarCommentId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, calendarCommentId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarCommentById}
     *
     * <pre>
     *----------------------查看单个日程评论详情----------------------
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarCommentId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarId_ = calendarId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.calendarCommentId_ = calendarCommentId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById.getDefaultInstance()) return this;
        if (other.hasCalendarId()) {
          setCalendarId(other.getCalendarId());
        }
        if (other.hasCalendarCommentId()) {
          setCalendarCommentId(other.getCalendarCommentId());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentById) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 calendarId = 1;
      private long calendarId_ ;
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public boolean hasCalendarId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public long getCalendarId() {
        return calendarId_;
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public Builder setCalendarId(long value) {
        bitField0_ |= 0x00000001;
        calendarId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public Builder clearCalendarId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarId_ = 0L;
        
        return this;
      }

      // optional int64 calendarCommentId = 2;
      private long calendarCommentId_ ;
      /**
       * <code>optional int64 calendarCommentId = 2;</code>
       *
       * <pre>
       *日程评论ID
       * </pre>
       */
      public boolean hasCalendarCommentId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 calendarCommentId = 2;</code>
       *
       * <pre>
       *日程评论ID
       * </pre>
       */
      public long getCalendarCommentId() {
        return calendarCommentId_;
      }
      /**
       * <code>optional int64 calendarCommentId = 2;</code>
       *
       * <pre>
       *日程评论ID
       * </pre>
       */
      public Builder setCalendarCommentId(long value) {
        bitField0_ |= 0x00000002;
        calendarCommentId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calendarCommentId = 2;</code>
       *
       * <pre>
       *日程评论ID
       * </pre>
       */
      public Builder clearCalendarCommentId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        calendarCommentId_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarCommentById)
    }

    static {
      defaultInstance = new FindCalendarCommentById(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarCommentById)
  }

  public interface FindCalendarCommentByIdRetOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional .CalendarComment calendarComment = 1;
    /**
     * <code>optional .CalendarComment calendarComment = 1;</code>
     *
     * <pre>
     *日程评论详情
     * </pre>
     */
    boolean hasCalendarComment();
    /**
     * <code>optional .CalendarComment calendarComment = 1;</code>
     *
     * <pre>
     *日程评论详情
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComment();
  }
  /**
   * Protobuf type {@code FindCalendarCommentByIdRet}
   */
  public static final class FindCalendarCommentByIdRet extends
      com.google.protobuf.GeneratedMessageLite
      implements FindCalendarCommentByIdRetOrBuilder {
    // Use FindCalendarCommentByIdRet.newBuilder() to construct.
    private FindCalendarCommentByIdRet(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FindCalendarCommentByIdRet(boolean noInit) {}

    private static final FindCalendarCommentByIdRet defaultInstance;
    public static FindCalendarCommentByIdRet getDefaultInstance() {
      return defaultInstance;
    }

    public FindCalendarCommentByIdRet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FindCalendarCommentByIdRet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = calendarComment_.toBuilder();
              }
              calendarComment_ = input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calendarComment_);
                calendarComment_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FindCalendarCommentByIdRet> PARSER =
        new com.google.protobuf.AbstractParser<FindCalendarCommentByIdRet>() {
      public FindCalendarCommentByIdRet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FindCalendarCommentByIdRet(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FindCalendarCommentByIdRet> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CalendarComment calendarComment = 1;
    public static final int CALENDARCOMMENT_FIELD_NUMBER = 1;
    private com.vine.vinemars.net.pb.CalendarMessage.CalendarComment calendarComment_;
    /**
     * <code>optional .CalendarComment calendarComment = 1;</code>
     *
     * <pre>
     *日程评论详情
     * </pre>
     */
    public boolean hasCalendarComment() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CalendarComment calendarComment = 1;</code>
     *
     * <pre>
     *日程评论详情
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComment() {
      return calendarComment_;
    }

    private void initFields() {
      calendarComment_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendarComment_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarComment_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code FindCalendarCommentByIdRet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRetOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarComment_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet build() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet result = new com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarComment_ = calendarComment_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet.getDefaultInstance()) return this;
        if (other.hasCalendarComment()) {
          mergeCalendarComment(other.getCalendarComment());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.FindCalendarCommentByIdRet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CalendarComment calendarComment = 1;
      private com.vine.vinemars.net.pb.CalendarMessage.CalendarComment calendarComment_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance();
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public boolean hasCalendarComment() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComment() {
        return calendarComment_;
      }
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public Builder setCalendarComment(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        calendarComment_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public Builder setCalendarComment(
          com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.Builder builderForValue) {
        calendarComment_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public Builder mergeCalendarComment(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            calendarComment_ != com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance()) {
          calendarComment_ =
            com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.newBuilder(calendarComment_).mergeFrom(value).buildPartial();
        } else {
          calendarComment_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public Builder clearCalendarComment() {
        calendarComment_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FindCalendarCommentByIdRet)
    }

    static {
      defaultInstance = new FindCalendarCommentByIdRet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FindCalendarCommentByIdRet)
  }

  public interface AddCalendarCommentOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional .CalendarComment calendarComment = 1;
    /**
     * <code>optional .CalendarComment calendarComment = 1;</code>
     *
     * <pre>
     *日程评论详情
     * </pre>
     */
    boolean hasCalendarComment();
    /**
     * <code>optional .CalendarComment calendarComment = 1;</code>
     *
     * <pre>
     *日程评论详情
     * </pre>
     */
    com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComment();
  }
  /**
   * Protobuf type {@code AddCalendarComment}
   */
  public static final class AddCalendarComment extends
      com.google.protobuf.GeneratedMessageLite
      implements AddCalendarCommentOrBuilder {
    // Use AddCalendarComment.newBuilder() to construct.
    private AddCalendarComment(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private AddCalendarComment(boolean noInit) {}

    private static final AddCalendarComment defaultInstance;
    public static AddCalendarComment getDefaultInstance() {
      return defaultInstance;
    }

    public AddCalendarComment getDefaultInstanceForType() {
      return defaultInstance;
    }

    private AddCalendarComment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = calendarComment_.toBuilder();
              }
              calendarComment_ = input.readMessage(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calendarComment_);
                calendarComment_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<AddCalendarComment> PARSER =
        new com.google.protobuf.AbstractParser<AddCalendarComment>() {
      public AddCalendarComment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddCalendarComment(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AddCalendarComment> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CalendarComment calendarComment = 1;
    public static final int CALENDARCOMMENT_FIELD_NUMBER = 1;
    private com.vine.vinemars.net.pb.CalendarMessage.CalendarComment calendarComment_;
    /**
     * <code>optional .CalendarComment calendarComment = 1;</code>
     *
     * <pre>
     *日程评论详情
     * </pre>
     */
    public boolean hasCalendarComment() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CalendarComment calendarComment = 1;</code>
     *
     * <pre>
     *日程评论详情
     * </pre>
     */
    public com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComment() {
      return calendarComment_;
    }

    private void initFields() {
      calendarComment_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendarComment_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarComment_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code AddCalendarComment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.AddCalendarCommentOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarComment_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment build() {
        com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment result = new com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarComment_ = calendarComment_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment.getDefaultInstance()) return this;
        if (other.hasCalendarComment()) {
          mergeCalendarComment(other.getCalendarComment());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.AddCalendarComment) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CalendarComment calendarComment = 1;
      private com.vine.vinemars.net.pb.CalendarMessage.CalendarComment calendarComment_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance();
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public boolean hasCalendarComment() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public com.vine.vinemars.net.pb.CalendarMessage.CalendarComment getCalendarComment() {
        return calendarComment_;
      }
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public Builder setCalendarComment(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        calendarComment_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public Builder setCalendarComment(
          com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.Builder builderForValue) {
        calendarComment_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public Builder mergeCalendarComment(com.vine.vinemars.net.pb.CalendarMessage.CalendarComment value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            calendarComment_ != com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance()) {
          calendarComment_ =
            com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.newBuilder(calendarComment_).mergeFrom(value).buildPartial();
        } else {
          calendarComment_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CalendarComment calendarComment = 1;</code>
       *
       * <pre>
       *日程评论详情
       * </pre>
       */
      public Builder clearCalendarComment() {
        calendarComment_ = com.vine.vinemars.net.pb.CalendarMessage.CalendarComment.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AddCalendarComment)
    }

    static {
      defaultInstance = new AddCalendarComment(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AddCalendarComment)
  }

  public interface DeleteCalendarCommentByIdOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional int64 calendarId = 1;
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    boolean hasCalendarId();
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    long getCalendarId();

    // optional int64 calendarCommentId = 2;
    /**
     * <code>optional int64 calendarCommentId = 2;</code>
     *
     * <pre>
     *日程评论ID
     * </pre>
     */
    boolean hasCalendarCommentId();
    /**
     * <code>optional int64 calendarCommentId = 2;</code>
     *
     * <pre>
     *日程评论ID
     * </pre>
     */
    long getCalendarCommentId();
  }
  /**
   * Protobuf type {@code DeleteCalendarCommentById}
   */
  public static final class DeleteCalendarCommentById extends
      com.google.protobuf.GeneratedMessageLite
      implements DeleteCalendarCommentByIdOrBuilder {
    // Use DeleteCalendarCommentById.newBuilder() to construct.
    private DeleteCalendarCommentById(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private DeleteCalendarCommentById(boolean noInit) {}

    private static final DeleteCalendarCommentById defaultInstance;
    public static DeleteCalendarCommentById getDefaultInstance() {
      return defaultInstance;
    }

    public DeleteCalendarCommentById getDefaultInstanceForType() {
      return defaultInstance;
    }

    private DeleteCalendarCommentById(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              calendarCommentId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<DeleteCalendarCommentById> PARSER =
        new com.google.protobuf.AbstractParser<DeleteCalendarCommentById>() {
      public DeleteCalendarCommentById parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteCalendarCommentById(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteCalendarCommentById> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 calendarId = 1;
    public static final int CALENDARID_FIELD_NUMBER = 1;
    private long calendarId_;
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    public boolean hasCalendarId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 calendarId = 1;</code>
     *
     * <pre>
     *日程ID
     * </pre>
     */
    public long getCalendarId() {
      return calendarId_;
    }

    // optional int64 calendarCommentId = 2;
    public static final int CALENDARCOMMENTID_FIELD_NUMBER = 2;
    private long calendarCommentId_;
    /**
     * <code>optional int64 calendarCommentId = 2;</code>
     *
     * <pre>
     *日程评论ID
     * </pre>
     */
    public boolean hasCalendarCommentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 calendarCommentId = 2;</code>
     *
     * <pre>
     *日程评论ID
     * </pre>
     */
    public long getCalendarCommentId() {
      return calendarCommentId_;
    }

    private void initFields() {
      calendarId_ = 0L;
      calendarCommentId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, calendarCommentId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, calendarCommentId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code DeleteCalendarCommentById}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById, Builder>
        implements com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentByIdOrBuilder {
      // Construct using com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendarId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarCommentId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById getDefaultInstanceForType() {
        return com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById.getDefaultInstance();
      }

      public com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById build() {
        com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById buildPartial() {
        com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById result = new com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarId_ = calendarId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.calendarCommentId_ = calendarCommentId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById other) {
        if (other == com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById.getDefaultInstance()) return this;
        if (other.hasCalendarId()) {
          setCalendarId(other.getCalendarId());
        }
        if (other.hasCalendarCommentId()) {
          setCalendarCommentId(other.getCalendarCommentId());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.vine.vinemars.net.pb.CalendarMessage.DeleteCalendarCommentById) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 calendarId = 1;
      private long calendarId_ ;
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public boolean hasCalendarId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public long getCalendarId() {
        return calendarId_;
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public Builder setCalendarId(long value) {
        bitField0_ |= 0x00000001;
        calendarId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calendarId = 1;</code>
       *
       * <pre>
       *日程ID
       * </pre>
       */
      public Builder clearCalendarId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarId_ = 0L;
        
        return this;
      }

      // optional int64 calendarCommentId = 2;
      private long calendarCommentId_ ;
      /**
       * <code>optional int64 calendarCommentId = 2;</code>
       *
       * <pre>
       *日程评论ID
       * </pre>
       */
      public boolean hasCalendarCommentId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 calendarCommentId = 2;</code>
       *
       * <pre>
       *日程评论ID
       * </pre>
       */
      public long getCalendarCommentId() {
        return calendarCommentId_;
      }
      /**
       * <code>optional int64 calendarCommentId = 2;</code>
       *
       * <pre>
       *日程评论ID
       * </pre>
       */
      public Builder setCalendarCommentId(long value) {
        bitField0_ |= 0x00000002;
        calendarCommentId_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 calendarCommentId = 2;</code>
       *
       * <pre>
       *日程评论ID
       * </pre>
       */
      public Builder clearCalendarCommentId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        calendarCommentId_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DeleteCalendarCommentById)
    }

    static {
      defaultInstance = new DeleteCalendarCommentById(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DeleteCalendarCommentById)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
